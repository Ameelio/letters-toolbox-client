{"version":3,"sources":["utils/helper.js","providers/authProvider.js","utils/filters.js","components/categories.js","components/designs.js","components/subcategories.js","components/volunteers.js","utils/toolboxComponents.js","components/users.js","components/products.js","components/facilities.js","components/orgs.js","components/mail.js","components/contacts.js","components/orgUsers.js","components/creditTransactions.js","providers/baseDataProvider.js","App.js","serviceWorker.js","index.js"],"names":["countHeader","fetchJson","url","options","token","localStorage","getItem","headers","Headers","Accept","set","fetchUtils","uploadImage","resource","params","a","data","FormData","append","img_src","rawFile","type","asset_src","thumbnail_src","fetchTimeout","resolve","process","method","body","response","json","status","s3_img_url","JSON","stringify","create","then","id","thumbnail_url","update","endpoint","pagination","page","perPage","sort","field","order","rangeStart","rangeEnd","query","range","has","Error","total","parseInt","get","split","pop","loadImageUrl","value","console","log","authProvider","login","loginRequest","email","username","password","login_data","setItem","api_token_expires","logout","removeItem","Promise","checkError","reject","checkAuth","current","Date","expires","getTime","getPermissions","IsActiveFilter","FilterList","label","FilterListItem","active","IsColoredFilter","color","DesignTypeFilter","types","name","CategoriesFilter","props","Filter","TextInput","source","alwaysOn","SelectInput","choices","CategoriesSidebar","Card","CardContent","CategoriesList","List","aside","filters","Datagrid","TextField","ImageField","title","FunctionField","render","record","BooleanField","EditButton","DeleteButton","CategoriesCreate","Create","SimpleForm","validate","required","ImageInput","form","accept","BooleanInput","CategoriesEdit","Edit","disabled","format","withStyles","theme","root","breakpoints","up","width","marginRight","down","display","MuiCard","DesignFilter","defaultValue","ReferenceInput","reference","optionText","ReferenceArrayInput","SelectArrayInput","FilterSidebar","FilterLiveSearch","DesignUpload","useFormState","values","FileInput","FileField","DesignsList","rowClick","DateField","ReferenceField","sortBy","double_sided","DesignsEdit","DesignsCreate","SubcategoriesFilter","SubcategoriesList","SubcategoriesEdit","SubcategoriesCreate","VolunteersList","VolunteersEdit","VolunteersCreate","LobField","href","defaultProps","RefundButton","useMutation","payload","refund","Button","onClick","AssignOrgUserButton","component","Link","to","pathname","state","org_id","CreateCreditTransactionButtion","user_id","UserFilter","referrerChoices","UsersList","addr_line_1","addr_line_2","city","postal","UsersEdit","TabbedForm","FormTab","ReferenceManyField","target","facility_address","facility_city","facility_state","facility_postal","first_name","last_name","ShowButton","premium","ProductsFilter","ProductsList","ProductsCreate","NumberInput","ProductsEdit","FacilitiesFilter","SearchInput","FacilitiesList","FacilitiesEdit","FacilitiesCreate","OrgFilter","OrgsList","address_line_1","address_line_2","OrgsEdit","OrgsCreate","MailShow","Show","SimpleShowLayout","UrlField","ArrayField","ContactsEdit","redirect","basePath","OrgUsersEdit","OrgUsersCreate","CreditTransactionsCreate","dataProvider","simpleRestProvider","baseDataProvider","getList","resp","getOne","getMany","getManyReference","nested","exec","updatePacket","createPacket","refundTransaction","refundCreditTransaction","i18nProvider","polyglotI18nProvider","englishMessages","allowMissing","App","Admin","Resource","list","edit","show","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"kVAKaA,EAAc,gBAEdC,EAAY,SAACC,GAAuB,IAAlBC,EAAiB,uDAAP,GACjCC,EAAQC,aAAaC,QAAQ,SAKnC,OAJKH,EAAQI,UACXJ,EAAQI,QAAU,IAAIC,QAAQ,CAAEC,OAAQ,sBAE1CN,EAAQI,QAAQG,IAAI,gBAApB,iBAA+CN,IACxCO,IAAWV,UAAUC,EAAKC,IAG5B,SAAeS,EAAtB,oC,4CAAO,WAA2BC,EAAUC,GAArC,qBAAAC,EAAA,sDACCC,EAAO,IAAIC,SADZ,KAGGJ,EAHH,OAIE,eAJF,OAQE,YARF,OAYE,aAZF,QAgBE,WAhBF,+BAKDG,EAAKE,OAAO,OAAQ,WACpBF,EAAKE,OAAO,OAAQJ,EAAOE,KAAKG,QAAQC,SANvC,mCASDJ,EAAKE,OAAO,OAAQJ,EAAOE,KAAKK,MAChCL,EAAKE,OAAO,OAAQJ,EAAOE,KAAKM,UAAUF,SAVzC,oCAaDJ,EAAKE,OAAO,OAAQ,aACpBF,EAAKE,OAAO,OAAQJ,EAAOE,KAAKO,cAAcH,SAd7C,oCAiBDJ,EAAKE,OAAO,OAAQ,UACpBF,EAAKE,OAAO,OAAQJ,EAAOE,KAAKO,cAAcH,SAlB7C,kFAwBkBI,IACrBtB,IAAIuB,QAAQC,2BAA2B,eACvC,CACEC,OAAQ,OACRpB,QAAS,IAAIC,QAAQ,CAAEC,OAAQ,qBAC/BmB,KAAMZ,GAER,KA/BG,eAwBCa,EAxBD,iBAkCcA,EAASC,OAlCvB,WAmCgB,QADfF,EAlCD,QAmCKG,OAnCL,uBAmC4BH,EAnC5B,eAqCCI,EAAaJ,EAAKZ,KArCnB,kBAsCEgB,GAtCF,6C,kEAyCA,WAA4BlB,GAA5B,iBAAAC,EAAA,sEACkBS,IACrBtB,IAAIuB,QAAQC,2BAA2B,aACrC,CACEC,OAAQ,OACRC,KAAMK,KAAKC,UAAUpB,GACrBP,QAAS,IAAIC,QAAQ,CAAE,eAAgB,sBAEzC,KARC,cACCqB,EADD,gBAWcA,EAASC,OAXvB,UAYe,QADdF,EAXD,QAYIG,OAZJ,sBAY2BH,EAZ3B,gCAcEA,EAAKZ,MAdP,4C,sBAiBA,SAAemB,EAAtB,sC,4CAAO,WAAsBtB,EAAUe,EAAMd,GAAtC,SAAAC,EAAA,+EACEd,EAAU,GAAD,OAAIyB,iCAAJ,YAAqCb,GAAY,CAC7Dc,OAAQ,OACRC,KAAMK,KAAKC,UAAUN,KAEtBQ,MAAK,gBAAGN,EAAH,EAAGA,KAAH,MAAe,CACjBd,KAAK,2BAAMF,EAAOE,MAAd,IAAoBqB,GAAIP,EAAKd,KAAKqB,UANvC,4C,kEAUA,WAA4BxB,EAAUe,EAAMd,GAA5C,SAAAC,EAAA,+EACEH,EAAY,SAAUE,GAC1BsB,MAAK,SAAAE,GACJ,OAAOH,EAAOtB,EAAD,YAAC,eAAce,GAAf,IAAqBL,cAAee,IAAgBxB,OAHhE,4C,sBAOA,SAAeyB,EAAtB,oC,4CAAO,WAAsB1B,EAAUC,GAAhC,SAAAC,EAAA,+EACEd,EAAU,GAAD,OAAIyB,iCAAJ,YAAqCb,EAArC,YAAiDC,EAAOuB,IAAM,CAC5EV,OAAQ,MACRC,KAAMK,KAAKC,UAAUpB,EAAOE,QAE7BoB,MAAM,gBAAGN,EAAH,EAAGA,KAAH,MAAe,CACpBd,KAAK,2BAAKc,EAAKd,MAAX,IAAiBqB,GAAIP,EAAKd,KAAKqB,UANhC,4C,kEAUA,WAA4BxB,EAAUC,GAAtC,SAAAC,EAAA,+EACEH,EAAY,SAAUE,GAC1BsB,MAAK,SAAAE,GAEJ,OADAxB,EAAOE,KAAP,2BAAkBF,EAAOE,MAAzB,IAA+BO,cAAee,IACvCC,EAAO1B,EAAUC,OAJvB,4C,kEAQA,WAAgCD,EAAUC,EAAQ0B,GAAlD,+BAAAzB,EAAA,+DACqBD,EAAO2B,WAAzBC,EADH,EACGA,KAAMC,EADT,EACSA,QADT,EAEoB7B,EAAO8B,KAAxBC,EAFH,EAEGA,MAAOC,EAFV,EAEUA,MACTC,GAAcL,EAAO,GAAKC,EAC1BK,EAAWN,EAAOC,EAAU,EAC5BM,EAAQ,CACZL,KAAMX,KAAKC,UAAU,CAACW,EAAOC,IAC7BI,MAAOjB,KAAKC,UAAU,CAACa,EAAYC,KAPhC,kBAUE/C,EAAU,GAAD,OAAIyB,iCAAJ,YAAqCc,EAArC,YAAiDN,oBAAUe,IAAU,CACnFtB,OAAQ,QAETS,MAAK,YAAwB,IAArB7B,EAAoB,EAApBA,QAASuB,EAAW,EAAXA,KAChB,IAAKvB,EAAQ4C,IAAInD,GACf,MAAM,IAAIoD,MAAJ,cACGpD,EADH,mPACyPA,EADzP,kDAKR,MAAO,CACLgB,KAAMc,EAAKd,KACXqC,MAEIC,SAAS/C,EAAQgD,IAAI,iBAAiBC,MAAM,KAAKC,MAAO,SAxB3D,4C,kEA8BA,WAAuC5C,EAAUC,GAAjD,eAAAC,EAAA,6DACCyB,EADD,8BACmC1B,EAAOuB,GAD1C,6BAEEpC,EAAU,GAAD,OAAIyB,iCAAJ,YAAqCc,GAAY,CAC/Db,OAAQ,QAETS,MAAK,YACJ,MAAO,CACLpB,KAFc,EAAVc,KAEOd,UAPV,4C,sBAYA,SAAS0C,EAAaC,GAE3B,OADAC,QAAQC,IAAI,UACPF,GAA4B,kBAAXA,GAIpBC,QAAQC,IAAIF,GACLA,IAJPC,QAAQC,IAAI,UACL,CAAE3D,IAAKyD,ICzJlB,IAuCeG,EAvCM,CACnBC,MAAO,YAML,ODgDG,SAAP,kCChDWC,CALO,CACZC,MAF+B,EAAzBC,SAGNC,SAH+B,EAAfA,WAOf/B,MAAK,SAAAgC,GACJ/D,aAAagE,QAAQ,QAASD,EAAWhE,OACzCC,aAAagE,QAAQ,gBAAiBD,EAAWE,uBAIvDC,OAAQ,WAEN,OADAlE,aAAamE,WAAW,SACjBC,QAAQhD,WAGjBiD,WAAY,YACV,OAAe,MADW,EAAb3C,QAEX1B,aAAamE,WAAW,SACjBC,QAAQE,UAEVF,QAAQhD,WAGjBmD,UAAW,WACT,GAAIvE,aAAaC,QAAQ,SAAU,CACjC,IAAMuE,EAAU,IAAIC,KACdC,EAAU,IAAID,KAAKzE,aAAaC,QAAQ,kBAC9C,OAAQyE,GAAWF,EAAQG,UAAYD,EAAWN,QAAQhD,UAAYgD,QAAQE,SAEhF,OAAOF,QAAQE,UAGjBM,eAAgB,kBAAMR,QAAQhD,Y,8LCnCnByD,GAAiB,kBAC5B,gBAACC,EAAA,EAAD,CAAYC,MAAM,UAChB,gBAACC,GAAA,EAAD,CAAgBD,MAAM,OAAOzB,MAAO,CAAC2B,QAAQ,KAC7C,gBAACD,GAAA,EAAD,CAAgBD,MAAM,QAAQzB,MAAO,CAAC2B,QAAQ,OAIrCC,GAAkB,kBAC7B,gBAACJ,EAAA,EAAD,CAAYC,MAAM,SAChB,gBAACC,GAAA,EAAD,CAAgBD,MAAM,OAAOzB,MAAO,CAAC6B,OAAO,KAC5C,gBAACH,GAAA,EAAD,CAAgBD,MAAM,QAAQzB,MAAO,CAAC6B,OAAO,OAIpCC,GAAmB,kBAC9B,gBAACN,EAAA,EAAD,CAAYC,MAAM,QAChB,gBAACC,GAAA,EAAD,CAAgBD,MAAM,WAAWzB,MAAO,CAACtC,KAAM,cAC/C,gBAACgE,GAAA,EAAD,CAAgBD,MAAM,SAASzB,MAAO,CAACtC,KAAM,YAC7C,gBAACgE,GAAA,EAAD,CAAgBD,MAAM,UAAUzB,MAAO,CAACtC,KAAM,eCG5CqE,GAAQ,CACZ,CAAErD,GAAI,UAAWsD,KAAM,WACvB,CAAEtD,GAAI,UAAWsD,KAAM,WACvB,CAAEtD,GAAI,OAAQsD,KAAM,SAGhBC,GAAmB,SAACC,GAAD,OACvB,gBAACC,EAAA,EAAWD,EACV,gBAACE,EAAA,EAAD,CAAWX,MAAM,SAASY,OAAO,IAAIC,UAAQ,IAC7C,gBAACC,EAAA,EAAD,CAAaF,OAAO,OAAOG,QAAST,OAIlCU,GAAoB,SAACP,GAAD,OACxB,gBAACQ,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,KACE,gBAAC,GAAD,SAKOC,GAAiB,SAACV,GAAD,OAC5B,gBAACW,EAAA,EAAD,iBAAUX,EAAV,CAAiBY,MAAO,gBAAC,GAAD,MAAuBC,QAAS,gBAAC,GAAD,QACtD,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAWZ,OAAO,OAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,SAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,SAClB,gBAACa,EAAA,EAAD,CAAYb,OAAO,UAAUc,MAAM,UACnC,gBAACC,EAAA,EAAD,CACEf,OAAO,SACPZ,MAAM,SACN4B,OAAQ,SAACC,EAAQjB,GAAT,OACN,gBAACkB,EAAA,EAAD,CACED,OAAM,2BAAOA,GAAP,IAAe3B,SAAU2B,EAAO3B,SACtCU,OAAQA,OAId,gBAACmB,EAAA,EAAD,MACA,gBAACC,EAAA,EAAD,SAKOC,GAAmB,SAACxB,GAAD,OAC9B,gBAACyB,EAAA,EAAWzB,EACV,gBAAC0B,EAAA,EAAD,KACE,gBAACxB,EAAA,EAAD,CAAWC,OAAO,OAAOwB,SAAUC,gBACnC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,UAClB,gBAAC0B,EAAA,EAAD,CACEC,KAAMjE,EACNsC,OAAO,UACPc,MAAM,UACN1B,MAAM,QACNwC,OAAO,WAEP,gBAACf,EAAA,EAAD,CAAYb,OAAO,SAErB,gBAAC6B,EAAA,EAAD,CAAczC,MAAM,UAAUY,OAAO,YACrC,gBAAC6B,EAAA,EAAD,CAAczC,MAAM,SAASY,OAAO,WACpC,gBAACE,EAAA,EAAD,CAAaF,OAAO,OAAOG,QAAST,QAK7BoC,GAAiB,SAACjC,GAAD,OAC5B,gBAACkC,EAAA,EAASlC,EACR,gBAAC0B,EAAA,EAAD,KACE,gBAACxB,EAAA,EAAD,CAAWiC,UAAQ,EAAC5C,MAAM,KAAKY,OAAO,OACtC,gBAACD,EAAA,EAAD,CAAWC,OAAO,OAAOwB,SAAUC,gBACnC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,UAClB,gBAAC6B,EAAA,EAAD,CAAczC,MAAM,SAASY,OAAO,WACpC,gBAAC6B,EAAA,EAAD,CAAczC,MAAM,UAAUY,OAAO,YACrC,gBAAC0B,EAAA,EAAD,CACEO,OAAQvE,EACRsC,OAAO,UACPZ,MAAM,QACNwC,OAAO,WAEP,gBAACf,EAAA,EAAD,CAAYb,OAAO,SAErB,gBAACE,EAAA,EAAD,CAAaF,OAAO,OAAOG,QAAST,Q,2GCxEpCA,GAAQ,CACZ,CAAErD,GAAI,WAAYsD,KAAM,YACxB,CAAEtD,GAAI,UAAWsD,KAAM,WACvB,CAAEtD,GAAI,SAAUsD,KAAM,WAGlBU,GAAO6B,cAAW,SAACC,GAAD,YAAY,CAClCC,MAAI,oBACDD,EAAME,YAAYC,GAAG,MAAQ,CAC5BxF,OAAQ,EACRyF,MAAO,OACPC,YAAa,QAJb,eAMDL,EAAME,YAAYI,KAAK,MAAQ,CAC9BC,QAAS,SAPT,MADOR,CAWTS,KAEEC,GAAe,SAAC/C,GAAD,OACnB,gBAACC,EAAA,EAAWD,EACV,gBAACE,EAAA,EAAD,CAAWX,MAAM,cAAcY,OAAO,OAAO6C,aAAa,KAC1D,gBAACC,GAAA,EAAD,CACE1D,MAAM,UACNY,OAAO,aACPrD,QAAS,IACToG,UAAU,WACVvB,SAAUC,eAEV,gBAACvB,EAAA,EAAD,CAAa8C,WAAW,UAE1B,gBAACF,GAAA,EAAD,CACE1D,MAAM,cACNY,OAAO,iBACP+C,UAAU,gBACVpG,QAAS,IACT6E,SAAUC,eAEV,gBAACvB,EAAA,EAAD,CAAa8C,WAAW,UAE1B,gBAACC,GAAA,EAAD,CACE7D,MAAM,aACNY,OAAO,gBACP+C,UAAU,cAEV,gBAACG,GAAA,EAAD,CAAkBF,WAAW,kBAK7BG,GAAgB,SAACtD,GAAD,OACpB,gBAAC,GAAD,KACE,gBAACS,EAAA,EAAD,KACE,gBAAC8C,GAAA,EAAD,CAAkBpD,OAAO,MACzB,gBAAC,GAAD,MACA,gBAAC,GAAD,MACA,gBAAC,GAAD,SAKAqD,GAAe,SAACxD,GAEpB,OADmByD,eAAXC,OACOlI,MACb,IAAK,SACH,OACE,2BACE,gBAACqG,EAAA,EAAD,eACEO,OAAQvE,EACRsC,OAAO,gBACPZ,MAAM,YACNwC,OAAO,UACPJ,SAAUC,eACN5B,GAEJ,gBAACgB,EAAA,EAAD,CAAYb,OAAO,SAErB,gBAACwD,GAAA,EAAD,eACExD,OAAO,YACPZ,MAAM,MACNwC,OAAO,kBACPJ,SAAUC,eACN5B,GAEJ,gBAAC4D,GAAA,EAAD,CAAWzD,OAAO,MAAMc,MAAM,YAItC,QACE,OACE,gBAACY,EAAA,EAAD,eACEO,OAAQvE,EACRsC,OAAO,YACPZ,MAAM,QACNwC,OAAO,UACPJ,SAAUC,eACN5B,GAEJ,gBAACgB,EAAA,EAAD,CAAYb,OAAO,WAMhB0D,GAAc,SAAC7D,GAAD,OACzB,gBAACW,EAAA,EAAD,iBAAUX,EAAV,CAAiBY,MAAO,gBAAC,GAAD,MAAmBC,QAAS,gBAAC,GAAD,QAClD,gBAACC,EAAA,EAAD,CAAUgD,SAAS,QACjB,gBAAC/C,EAAA,EAAD,CAAWZ,OAAO,OAClB,gBAAC4D,GAAA,EAAD,CAAW5D,OAAO,eAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,SAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,SAClB,gBAACa,EAAA,EAAD,CAAYb,OAAO,gBAAgBc,MAAM,UACzC,gBAAC+C,GAAA,EAAD,CACEzE,MAAM,cACNY,OAAO,iBACP+C,UAAU,gBACVe,OAAO,QAEP,gBAAClD,EAAA,EAAD,CAAWZ,OAAO,UAEpB,gBAACe,EAAA,EAAD,CACEf,OAAO,SACPZ,MAAM,SACN4B,OAAQ,SAACC,EAAQjB,GAAT,OACN,gBAACkB,EAAA,EAAD,CACED,OAAM,2BAAOA,GAAP,IAAe3B,SAAU2B,EAAO3B,SACtCU,OAAQA,OAId,gBAACe,EAAA,EAAD,CACEf,OAAO,QACPZ,MAAM,QACN4B,OAAQ,SAACC,EAAQjB,GAAT,OACN,gBAACkB,EAAA,EAAD,CACED,OAAM,2BAAOA,GAAP,IAAe3B,SAAU2B,EAAOzB,QACtCQ,OAAQA,OAId,gBAACe,EAAA,EAAD,CACEf,OAAO,eACPZ,MAAM,eACN4B,OAAQ,SAACC,EAAQjB,GAAT,OACN,gBAACkB,EAAA,EAAD,CACED,OAAM,2BAAOA,GAAP,IAAe3B,SAAU2B,EAAO8C,eACtC/D,OAAQA,OAId,gBAACmB,EAAA,EAAD,CAAY/B,MAAM,SAClB,gBAACgC,EAAA,EAAD,CAAchC,MAAM,cAKb4E,GAAc,SAACnE,GAAD,OACzB,gBAACkC,EAAA,EAASlC,EACR,gBAAC0B,EAAA,EAAD,KACE,gBAACxB,EAAA,EAAD,CAAWiC,UAAQ,EAAC5C,MAAM,KAAKY,OAAO,OACtC,gBAACD,EAAA,EAAD,CAAWC,OAAO,OAAOwB,SAAUC,gBACnC,gBAACvB,EAAA,EAAD,CAAaF,OAAO,OAAOwB,SAAUC,cAAYtB,QAAST,KAC1D,gBAACoD,GAAA,EAAD,CACE1D,MAAM,cACNY,OAAO,iBACP+C,UAAU,gBACVpG,QAAS,IACT6E,SAAUC,eAEV,gBAACvB,EAAA,EAAD,CAAa8C,WAAW,UAE1B,gBAACnB,EAAA,EAAD,CAAczC,MAAM,SAASY,OAAO,SAAS6C,cAAc,IAC3D,gBAAChB,EAAA,EAAD,CAAczC,MAAM,oCAAoCY,OAAO,UAC/D,gBAAC6B,EAAA,EAAD,CACEzC,MAAM,2CACNY,OAAO,eACP6C,cAAc,IAEhB,gBAACC,GAAA,EAAD,CACE1D,MAAM,UACNY,OAAO,aACPrD,QAAS,IACToG,UAAU,WACVvB,SAAUC,eAEV,gBAACvB,EAAA,EAAD,CAAa8C,WAAW,UAE1B,gBAACjD,EAAA,EAAD,CAAWC,OAAO,UAClB,gBAAC,GAAD,MACA,gBAACiD,GAAA,EAAD,CACE7D,MAAM,aACNY,OAAO,gBACP+C,UAAU,cAEV,gBAACG,GAAA,EAAD,CAAkBF,WAAW,mBAMxBiB,GAAgB,SAACpE,GAAD,OAC3B,gBAACyB,EAAA,EAAWzB,EACV,gBAAC0B,EAAA,EAAD,KACE,gBAACxB,EAAA,EAAD,CAAWC,OAAO,OAAOwB,SAAUC,gBACnC,gBAACvB,EAAA,EAAD,CAAaF,OAAO,OAAOwB,SAAUC,cAAYtB,QAAST,KAC1D,gBAACoD,GAAA,EAAD,CACE1D,MAAM,cACNY,OAAO,iBACP+C,UAAU,gBACVpG,QAAS,IACT6E,SAAUC,eAEV,gBAACvB,EAAA,EAAD,CAAa8C,WAAW,UAE1B,gBAACnB,EAAA,EAAD,CAAczC,MAAM,SAASY,OAAO,WACpC,gBAAC6B,EAAA,EAAD,CACEzC,MAAM,oCACNY,OAAO,QACP6C,cAAc,IAEhB,gBAAChB,EAAA,EAAD,CACEzC,MAAM,2CACNY,OAAO,eACP6C,cAAc,IAEhB,gBAACC,GAAA,EAAD,CACE1D,MAAM,UACNY,OAAO,aACP+C,UAAU,WACVpG,QAAS,IACT6E,SAAUC,eAEV,gBAACvB,EAAA,EAAD,CAAa8C,WAAW,UAE1B,gBAACjD,EAAA,EAAD,CAAWC,OAAO,UAClB,gBAAC,GAAD,MACA,gBAACiD,GAAA,EAAD,CACE7D,MAAM,aACNY,OAAO,gBACP+C,UAAU,cAEV,gBAACG,GAAA,EAAD,CAAkBF,WAAW,mBC/Q/BkB,GAAsB,SAACrE,GAAD,OAC1B,gBAACC,EAAA,EAAWD,EACV,gBAACE,EAAA,EAAD,CAAWX,MAAM,SAASY,OAAO,IAAIC,UAAQ,MAGpCkE,GAAoB,SAAAtE,GAAK,OACpC,gBAACW,EAAA,EAAD,iBAAUX,EAAV,CAAiBa,QAAS,gBAAC,GAAD,QACxB,gBAACC,EAAA,EAAD,CAAUgD,SAAS,QACjB,gBAAC/C,EAAA,EAAD,CAAWZ,OAAO,OAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,SAClB,gBAAC4D,GAAA,EAAD,CAAW5D,OAAO,eAClB,gBAAC4D,GAAA,EAAD,CAAW5D,OAAO,eAClB,gBAAC6D,GAAA,EAAD,CAAgBzE,MAAM,WAAWY,OAAO,qBAAqB+C,UAAU,cACrE,gBAACnC,EAAA,EAAD,CAAWZ,OAAO,UAEpB,gBAACe,EAAA,EAAD,CAAef,OAAO,SAASZ,MAAM,SAAS4B,OAAQ,SAACC,EAAOjB,GAAR,OACpD,gBAACkB,EAAA,EAAD,CAAcD,OAAM,2BAAMA,GAAN,IAAa3B,SAAS2B,EAAO3B,SAASU,OAAQA,OACpE,gBAACmB,EAAA,EAAD,MACA,gBAACC,EAAA,EAAD,SAKOgD,GAAoB,SAAAvE,GAAK,OACpC,gBAACkC,EAAA,EAASlC,EACR,gBAAC0B,EAAA,EAAD,KACE,gBAACxB,EAAA,EAAD,CAAWiC,UAAQ,EAAChC,OAAO,OAC3B,gBAACD,EAAA,EAAD,CAAWC,OAAO,OAAOwB,SAAUC,gBACnC,gBAACqB,GAAA,EAAD,CAAgB1D,MAAM,WAAWY,OAAO,qBAAqB+C,UAAU,aAAavB,SAAUC,eAC5F,gBAACvB,EAAA,EAAD,CAAa8C,WAAW,UAE1B,gBAACjD,EAAA,EAAD,CAAWC,OAAO,aAClB,gBAAC6B,EAAA,EAAD,CAAczC,MAAM,SAASY,OAAO,SAAS6C,cAAc,OAKpDwB,GAAsB,SAAAxE,GAAK,OACtC,gBAACyB,EAAA,EAAWzB,EACV,gBAAC0B,EAAA,EAAD,KACE,gBAACxB,EAAA,EAAD,CAAWC,OAAO,OAAOwB,SAAUC,gBACnC,gBAACqB,GAAA,EAAD,CAAgB1D,MAAM,WAAWY,OAAO,qBAAqB+C,UAAU,aAAavB,SAAUC,eAC5F,gBAACvB,EAAA,EAAD,CAAa8C,WAAW,UAE1B,gBAACjD,EAAA,EAAD,CAAWC,OAAO,aAClB,gBAAC6B,EAAA,EAAD,CAAczC,MAAM,SAASY,OAAO,SAAS6C,cAAc,OC7CpDyB,GAAiB,SAAAzE,GAAK,OACjC,gBAACW,EAAA,EAASX,EACR,gBAACc,EAAA,EAAD,CAAUgD,SAAS,QACjB,gBAAC/C,EAAA,EAAD,CAAWZ,OAAO,OAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,eAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,cAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,SAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,UAClB,gBAACe,EAAA,EAAD,CAAef,OAAO,SAASZ,MAAM,SAAS4B,OAAQ,SAACC,EAAOjB,GAAR,OACpD,gBAACkB,EAAA,EAAD,CAAcD,OAAM,2BAAMA,GAAN,IAAa3B,SAAS2B,EAAO3B,SAASU,OAAQA,OACpE,gBAACmB,EAAA,EAAD,MACA,gBAACC,EAAA,EAAD,SAMOmD,GAAiB,SAAA1E,GAAK,OACjC,gBAACkC,EAAA,EAASlC,EACR,gBAAC0B,EAAA,EAAD,KACE,gBAACxB,EAAA,EAAD,CAAWiC,UAAQ,EAAChC,OAAO,OAC3B,gBAACD,EAAA,EAAD,CAAWC,OAAO,aAAawB,SAAUC,gBACzC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,YAAYwB,SAAUC,gBACxC,gBAACvB,EAAA,EAAD,CAAaF,OAAO,OAAOwB,SAAUC,cAAYtB,QAAS,CACxD,CAAE9D,GAAI,WAAYsD,KAAM,YACxB,CAAEtD,GAAI,qBAAsBsD,KAAM,yBAEpC,gBAACI,EAAA,EAAD,CAAWC,OAAO,QAAQwB,SAAUC,gBACpC,gBAACI,EAAA,EAAD,CAAczC,MAAM,SAASY,OAAO,cAK7BwE,GAAmB,SAAA3E,GAAK,OACnC,gBAACyB,EAAA,EAAWzB,EACV,gBAAC0B,EAAA,EAAD,KACE,gBAACxB,EAAA,EAAD,CAAWC,OAAO,aAAawB,SAAUC,gBACzC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,YAAYwB,SAAUC,gBACxC,gBAACvB,EAAA,EAAD,CAAaF,OAAO,OAAOwB,SAAUC,cAAYtB,QAAS,CACxD,CAAE9D,GAAI,WAAYsD,KAAM,YACxB,CAAEtD,GAAI,qBAAsBsD,KAAM,yBAEpC,gBAACI,EAAA,EAAD,CAAWC,OAAO,QAAQwB,SAAUC,gBACpC,gBAACI,EAAA,EAAD,CAAczC,MAAM,SAASY,OAAO,c,8EC3C7ByE,GAAW,SAAC,GAAD,IAAGzE,EAAH,EAAGA,OAAH,IAAWiB,cAAX,MAAoB,GAApB,SACtB,qBAAGyD,KAAM,uCAAyCzD,EAAOjB,IAAUiB,EAAOjB,KAC5EyE,GAASE,aAAe,CAAEvF,MAAO,UAE1B,IAAMwF,GAAe,SAAC,GAAgB,IAAd3D,EAAa,EAAbA,OAAa,EACzB4D,aAAY,CAC3BxJ,KAAM,oBACNR,SAAU,sBACViK,QAAS,CAAEzI,GAAI4E,EAAO5E,MAHjB0I,EADmC,qBAO1C,OACE,gBAACC,GAAA,EAAD,CAAQ5F,MAAM,SAAS6F,QAASF,KAIvBG,GAAsB,SAAC,GAAD,IAAGjE,EAAH,EAAGA,OAAH,OACjC,gBAAC+D,GAAA,EAAD,CACEG,UAAWC,KACXC,GAAI,CACFC,SAAU,oBACVC,MAAO,CAAEtE,OAAQ,CAAEuE,OAAQvE,EAAO5E,MAEpC+C,MAAM,kBAIGqG,GAAiC,SAAC,GAAD,IAAGxE,EAAH,EAAGA,OAAH,OAC5C,gBAAC+D,GAAA,EAAD,CACEG,UAAWC,KACXC,GAAI,CACFC,SAAU,8BACVC,MAAO,CAACtE,OAAQ,CAACyE,QAASzE,EAAO5E,MAEnC+C,MAAM,4BCjCJuG,GAAa,SAAC9F,GAAD,OACjB,gBAACC,EAAA,EAAWD,EACV,gBAACE,EAAA,EAAD,CAAWX,MAAM,SAASY,OAAO,IAAIC,UAAQ,MAI3C2F,GAAkB,CACtB,CAACvJ,GAAI,qBAAsBsD,KAAM,oCACjC,CAACtD,GAAI,wCAAyCsD,KAAM,yCACpD,CAACtD,GAAI,yBAA0BsD,KAAM,0BACrC,CAACtD,GAAI,qBAAsBsD,KAAM,sBACjC,CAACtD,GAAI,gBAAiBsD,KAAM,iBAC5B,CAACtD,GAAI,kBAAmBsD,KAAM,mBAC9B,CAACtD,GAAI,QAASsD,KAAM,UAGTkG,GAAY,SAAAhG,GAAK,OAC5B,gBAACW,EAAA,EAAD,eAAME,QAAS,gBAAC,GAAD,OAAoBb,GACjC,gBAACc,EAAA,EAAD,CAAUgD,SAAS,QACjB,gBAAC/C,EAAA,EAAD,CAAWZ,OAAO,OAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,eAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,cAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,UAClB,gBAACe,EAAA,EAAD,CAAe3B,MAAM,UAAU4B,OAAQ,SAAAC,GAAM,gBAAOA,EAAO6E,YAAd,YAA6B7E,EAAO8E,YAApC,YAAmD9E,EAAO+E,KAA1D,aAAmE/E,EAAOsE,MAA1E,YAAmFtE,EAAOgF,WACvI,gBAAC9E,EAAA,EAAD,SAKO+E,GAAY,SAAArG,GAAK,OAC5B,gBAACkC,EAAA,EAASlC,EACR,gBAACsG,GAAA,EAAD,KACA,gBAACC,GAAA,EAAD,CAAShH,MAAM,aACb,gBAACW,EAAA,EAAD,CAAWiC,UAAQ,EAAChC,OAAO,OAC3B,gBAACD,EAAA,EAAD,CAAWC,OAAO,aAAawB,SAAUC,gBACzC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,YAAYwB,SAAUC,gBACxC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,QAAQwB,SAAUC,gBACpC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,cAAcwB,SAAUC,gBAC1C,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,gBAClB,gBAACD,EAAA,EAAD,CAAWC,OAAO,OAAOwB,SAAUC,gBACnC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,QAAQwB,SAAUC,gBACpC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,SAASwB,SAAUC,gBACrC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,UAAUwB,SAAUC,gBACtC,gBAAC1B,EAAA,EAAD,CAAWX,MAAM,UAAUY,OAAO,SAASwB,SAAUC,gBACrD,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,eAAewB,SAAUC,gBAC3C,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,QAAQwB,SAAUC,gBACpC,gBAACvB,EAAA,EAAD,CAAa8B,UAAQ,EAAChC,OAAO,UAAUG,QAASyF,MAGlD,gBAACQ,GAAA,EAAD,CAAShH,MAAM,YACb,gBAACiH,GAAA,EAAD,CAAoBtD,UAAU,WAAW3D,MAAM,WAAWkH,OAAO,oBAC/D,gBAAC3F,EAAA,EAAD,CAAUgD,SAAS,QACjB,gBAAC/C,EAAA,EAAD,CAAWZ,OAAO,OAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,eAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,cAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,kBAClB,gBAACe,EAAA,EAAD,CAAe3B,MAAM,mBAAmB4B,OAAQ,SAAAC,GAAM,gBAAOA,EAAOsF,iBAAd,YAAkCtF,EAAOuF,cAAzC,aAA2DvF,EAAOwF,eAAlE,YAAoFxF,EAAOyF,oBACjJ,gBAAC9F,EAAA,EAAD,CAAWZ,OAAO,kBAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,iBAClB,gBAACmB,EAAA,EAAD,MACA,gBAACC,EAAA,EAAD,SAKN,gBAACgF,GAAA,EAAD,CAAShH,MAAM,QACb,gBAACiH,GAAA,EAAD,CAAoBtD,UAAU,OAAO3D,MAAM,OAAOkH,OAAO,oBACvD,gBAAC3F,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAWZ,OAAO,OAClB,gBAAC,GAAD,CAAUA,OAAO,WACjB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,eAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,iBAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,WAClB,gBAAC6D,GAAA,EAAD,CAAgBzE,MAAM,UAAUY,OAAO,aAAa+C,UAAU,YAC5D,gBAAChC,EAAA,EAAD,CAAeC,OAAQ,SAAAC,GAAM,gBAAOA,EAAO0F,WAAd,YAA4B1F,EAAO2F,eAElE,gBAACC,GAAA,EAAD,SAKN,gBAACT,GAAA,EAAD,CAAShH,MAAM,gBACb,gBAAC,GAAD,MACA,gBAACiH,GAAA,EAAD,CAAoBtD,UAAU,sBAAsB3D,MAAM,sBAAsBkH,OAAO,oBACrF,gBAAC3F,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAWZ,OAAO,OAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,eAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,SAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,WAClB,gBAACe,EAAA,EAAD,CAAef,OAAO,UAAUZ,MAAM,UAAU4B,OAAQ,SAACC,EAAOjB,GAAR,OACtD,gBAACkB,EAAA,EAAD,CAAcD,OAAM,2BAAMA,GAAN,IAAa6F,UAAU7F,EAAO6F,UAAU9G,OAAQA,OACtE,gBAACY,EAAA,EAAD,CAAWZ,OAAO,UAClB,gBAACY,EAAA,EAAD,CAAWxB,MAAM,UAAUY,OAAO,cAClC,gBAAC,GAAD,QAIJ,gBAACqG,GAAA,EAAD,CAAoBtD,UAAU,sBAAsB3D,MAAM,sBAAsBkH,OAAO,oBACrF,gBAAC3F,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAWZ,OAAO,OAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,WAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,WAClB,gBAAC6D,GAAA,EAAD,CAAgB7D,OAAO,UAAU+C,UAAU,QAAQ3D,MAAM,QACvD,gBAACwB,EAAA,EAAD,CAAWZ,OAAO,gB,UCvGxB+G,GAAiB,SAAClH,GAAD,OACrB,gBAACC,EAAA,EAAWD,EACV,gBAACE,EAAA,EAAD,CAAWX,MAAM,SAASY,OAAO,IAAIC,UAAQ,MAIpC+G,GAAe,SAAAnH,GAAK,OAC/B,gBAACW,EAAA,EAAD,eAAME,QAAS,gBAAC,GAAD,OAAyBb,GACtC,gBAACc,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAWZ,OAAO,OAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,SAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,UAClB,gBAACa,EAAA,EAAD,CAAYb,OAAO,gBAAgBc,MAAM,UACzC,gBAACC,EAAA,EAAD,CAAef,OAAO,UAAUZ,MAAM,UAAU4B,OAAQ,SAACC,EAAQjB,GAAT,OACtD,gBAACkB,EAAA,EAAD,CAAcD,OAAM,2BAAMA,GAAN,IAAc6F,UAAW7F,EAAO6F,UAAU9G,OAAQA,OACxE,gBAACmB,EAAA,EAAD,SAKO8F,GAAiB,SAAApH,GAAK,OACjC,gBAACyB,EAAA,EAAWzB,EACV,gBAAC0B,EAAA,EAAD,KACE,gBAACxB,EAAA,EAAD,CAAWC,OAAO,OAAOwB,SAAUC,gBACnC,gBAACyF,GAAA,EAAD,CAAalH,OAAO,QAAQwB,SAAUC,gBACtC,gBAACC,EAAA,EAAD,CAAYC,KAAOjE,EAAesC,OAAO,gBAAgBc,MAAM,gBAAgB1B,MAAM,QAAQwC,OAAO,WAClG,gBAACf,EAAA,EAAD,CAAYb,OAAO,SAErB,gBAAC6B,EAAA,EAAD,CAAczC,MAAM,UAAUY,OAAO,UAAU6C,cAAc,IAC7D,gBAACqE,GAAA,EAAD,CAAalH,OAAO,OAAOZ,MAAM,uCAAwCoC,SAAUC,mBAK5E0F,GAAe,SAAAtH,GAAK,OAC/B,gBAACkC,EAAA,EAASlC,EACR,gBAAC0B,EAAA,EAAD,KACE,gBAACxB,EAAA,EAAD,CAAWiC,UAAQ,EAAC5C,MAAM,KAAKY,OAAO,OACtC,gBAACD,EAAA,EAAD,CAAWC,OAAO,OAAOwB,SAAUC,gBACnC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,QAAQwB,SAAUC,gBACpC,gBAACyF,GAAA,EAAD,CAAalH,OAAO,OAAOZ,MAAM,uCAAwCoC,SAAUC,gBACnF,gBAACC,EAAA,EAAD,CAAYC,KAAOjE,EAAesC,OAAO,gBAAgBc,MAAM,gBAAgB1B,MAAM,QAAQwC,OAAO,WAClG,gBAACf,EAAA,EAAD,CAAYb,OAAO,SAErB,gBAAC6B,EAAA,EAAD,CAAczC,MAAM,UAAUY,OAAO,e,UC7CrCoH,GAAmB,SAAAvH,GAAK,OAC5B,gBAACC,EAAA,EAAWD,EACV,gBAACwH,GAAA,EAAD,CAAarH,OAAO,IAAIC,UAAQ,MAIvBqH,GAAiB,SAAAzH,GAAK,OACjC,gBAACW,EAAA,EAAD,iBAAUX,EAAV,CAAiBa,QAAS,gBAAC,GAAD,QACxB,gBAACC,EAAA,EAAD,CAAUgD,SAAS,QACjB,gBAAC/C,EAAA,EAAD,CAAWZ,OAAO,OAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,cAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,YAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,SAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,UAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,WAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,SAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,UAClB,gBAACmB,EAAA,EAAD,MACA,gBAACC,EAAA,EAAD,SAKOmG,GAAiB,SAAA1H,GAAK,OACjC,gBAACkC,EAAA,EAASlC,EACR,gBAAC0B,EAAA,EAAD,KACE,gBAACxB,EAAA,EAAD,CAAWiC,UAAQ,EAAChC,OAAO,OAC3B,gBAACD,EAAA,EAAD,CAAWC,OAAO,SAClB,gBAACD,EAAA,EAAD,CAAWC,OAAO,cAClB,gBAACD,EAAA,EAAD,CAAWC,OAAO,YAClB,gBAACD,EAAA,EAAD,CAAWC,OAAO,SAClB,gBAACD,EAAA,EAAD,CAAWC,OAAO,UAClB,gBAACD,EAAA,EAAD,CAAWC,OAAO,WAClB,gBAACD,EAAA,EAAD,CAAWC,OAAO,SAClB,gBAAC6B,EAAA,EAAD,CAAczC,MAAM,UAAUY,OAAO,YACrC,gBAACD,EAAA,EAAD,CAAWC,OAAO,UAClB,gBAACD,EAAA,EAAD,CAAWC,OAAO,SAClB,gBAACD,EAAA,EAAD,CAAWC,OAAO,cAKXwH,GAAmB,SAAA3H,GAAK,OACnC,gBAACyB,EAAA,EAAWzB,EACV,gBAAC0B,EAAA,EAAD,KACE,gBAACxB,EAAA,EAAD,CAAWC,OAAO,OAAOwB,SAAUC,gBACnC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,YAAYwB,SAAUC,gBACxC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,UAAUwB,SAAUC,gBACtC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,OAAOwB,SAAUC,gBACnC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,QAAQwB,SAAUC,gBACpC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,SAASwB,SAAUC,gBACrC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,SAClB,gBAAC6B,EAAA,EAAD,CAAczC,MAAM,UAAUY,OAAO,YACrC,gBAACD,EAAA,EAAD,CAAWC,OAAO,UAClB,gBAACD,EAAA,EAAD,CAAWC,OAAO,SAClB,gBAACD,EAAA,EAAD,CAAWC,OAAO,cCtDlByH,GAAY,SAAA5H,GAAK,OACrB,gBAACC,EAAA,EAAWD,EACV,gBAACE,EAAA,EAAD,CAAWX,MAAM,SAASY,OAAO,IAAIC,UAAQ,MAIpCyH,GAAW,SAAA7H,GAAK,OAC3B,gBAACW,EAAA,EAAD,eAAME,QAAU,gBAAC,GAAD,OAAoBb,GAClC,gBAACc,EAAA,EAAD,CAAUgD,SAAS,QACjB,gBAAC/C,EAAA,EAAD,CAAWZ,OAAO,OAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,SAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,kBAClB,gBAACY,EAAA,EAAD,CAAWxB,MAAM,MAAMY,OAAO,QAC9B,gBAACe,EAAA,EAAD,CAAe3B,MAAM,UAAU4B,OAAQ,SAAAC,GAAM,gBAAOA,EAAO0G,eAAd,YAAgC1G,EAAO2G,eAAvC,YAAyD3G,EAAO+E,KAAhE,aAAyE/E,EAAOsE,MAAhF,YAAyFtE,EAAOgF,WAC7I,gBAAC9E,EAAA,EAAD,MACA,gBAACC,EAAA,EAAD,SAKOyG,GAAW,SAAAhI,GAAK,OAC3B,gBAACkC,EAAA,EAASlC,EACR,gBAACsG,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CAAShH,MAAM,YACb,gBAACW,EAAA,EAAD,CAAWiC,UAAQ,EAAC5C,MAAM,KAAKY,OAAO,OACtC,gBAACD,EAAA,EAAD,CAAWC,OAAO,OAAOwB,SAAUC,gBACnC,gBAAC1B,EAAA,EAAD,CAAWX,MAAM,gBAAgBY,OAAO,gBAAgBwB,SAAUC,gBAClE,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,MAAMwB,SAAUC,gBAClC,gBAAC1B,EAAA,EAAD,CAAWX,MAAM,iBAAiBY,OAAO,iBAAiBwB,SAAUC,gBACpE,gBAAC1B,EAAA,EAAD,CAAWX,MAAM,iBAAiBY,OAAO,mBACzC,gBAACD,EAAA,EAAD,CAAWC,OAAO,OAAOwB,SAAUC,gBACnC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,QAAQwB,SAAUC,gBACpC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,SAASwB,SAAUC,gBACrC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,UAAUwB,SAAUC,gBACtC,gBAAC1B,EAAA,EAAD,CAAWX,MAAM,mBAAmBY,OAAO,2BAC3C,gBAACD,EAAA,EAAD,CAAWX,MAAM,mBAAmBY,OAAO,2BAC3C,gBAACD,EAAA,EAAD,CAAWX,MAAM,iBAAiBY,OAAO,wBACzC,gBAACD,EAAA,EAAD,CAAWX,MAAM,iBAAiBY,OAAO,wBACzC,gBAAC6B,EAAA,EAAD,CAAczC,MAAM,QAAQY,OAAO,cAGrC,gBAACoG,GAAA,EAAD,CAAShH,MAAM,YACb,gBAACiH,GAAA,EAAD,CAAoBtD,UAAU,WAAW3D,MAAM,WAAWkH,OAAO,mBAC/D,gBAAC3F,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAWZ,OAAO,OAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,eAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,cAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,kBAClB,gBAACe,EAAA,EAAD,CAAe3B,MAAM,mBAAmB4B,OAAQ,SAAAC,GAAM,gBAAOA,EAAOsF,iBAAd,YAAkCtF,EAAOuF,cAAzC,aAA2DvF,EAAOwF,eAAlE,YAAoFxF,EAAOyF,oBACjJ,gBAACvF,EAAA,EAAD,MACA,gBAACC,EAAA,EAAD,SAKN,gBAACgF,GAAA,EAAD,CAAShH,MAAM,cACb,gBAAC,GAAD,MACA,gBAACiH,GAAA,EAAD,CAAoBtD,UAAU,YAAY3D,MAAM,QAAQkH,OAAO,mBAC7D,gBAAC3F,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAWZ,OAAO,OAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,SAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,SAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,UAClB,gBAACmB,EAAA,EAAD,YAQC2G,GAAa,SAAAjI,GAAK,OAC7B,gBAACyB,EAAA,EAAWzB,EACV,gBAAC0B,EAAA,EAAD,KACE,gBAACxB,EAAA,EAAD,CAAWiC,UAAQ,EAAC5C,MAAM,KAAKY,OAAO,OACtC,gBAACD,EAAA,EAAD,CAAWC,OAAO,OAAOwB,SAAUC,gBACnC,gBAAC1B,EAAA,EAAD,CAAWX,MAAM,gBAAgBY,OAAO,gBAAgBwB,SAAUC,gBAClE,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,MAAMwB,SAAUC,gBAClC,gBAAC1B,EAAA,EAAD,CAAWX,MAAM,iBAAiBY,OAAO,iBAAiBwB,SAAUC,gBACpE,gBAAC1B,EAAA,EAAD,CAAWX,MAAM,iBAAiBY,OAAO,mBACzC,gBAACD,EAAA,EAAD,CAAWC,OAAO,OAAOwB,SAAUC,gBACnC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,QAAQwB,SAAUC,gBACpC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,SAASwB,SAAUC,gBACrC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,UAAUwB,SAAUC,gBACtC,gBAAC1B,EAAA,EAAD,CAAWX,MAAM,mBAAmBY,OAAO,2BAC3C,gBAACD,EAAA,EAAD,CAAWX,MAAM,mBAAmBY,OAAO,2BAC3C,gBAACD,EAAA,EAAD,CAAWX,MAAM,iBAAiBY,OAAO,wBACzC,gBAACD,EAAA,EAAD,CAAWX,MAAM,iBAAiBY,OAAO,wBACzC,gBAAC6B,EAAA,EAAD,CAAczC,MAAM,QAAQY,OAAO,gB,wCCpE5B+H,GAAW,SAAAlI,GAAK,OAC3B,gBAACmI,GAAA,EAASnI,EACR,gBAACoI,GAAA,EAAD,KACE,gBAACrH,EAAA,EAAD,CAAWZ,OAAO,OAClB,gBAAC,GAAD,CAAUZ,MAAM,SAASY,OAAO,WAChC,gBAAC4D,GAAA,EAAD,CAAWxE,MAAM,yBAAyBY,OAAO,2BACjD,gBAAC4D,GAAA,EAAD,CAAW5D,OAAO,sBAClB,gBAACY,EAAA,EAAD,CAAWxB,MAAM,aAAaY,OAAO,eACrC,gBAACY,EAAA,EAAD,CAAWZ,OAAO,SAClB,gBAACkI,GAAA,EAAD,CAAU9I,MAAM,WAAWY,OAAO,YAClC,gBAAC6D,GAAA,EAAD,CAAgBzE,MAAM,KAAKY,OAAO,aAAa+C,UAAU,YACvD,gBAAChC,EAAA,EAAD,CAAeC,OAAQ,SAAAC,GAAM,gBAAOA,EAAO0F,WAAd,YAA4B1F,EAAO2F,eAElE,gBAAC/C,GAAA,EAAD,CAAgBzE,MAAM,mBAAmBY,OAAO,aAAa+C,UAAU,YACrE,gBAAChC,EAAA,EAAD,CAAe3B,MAAM,mBAAmB4B,OAAQ,SAAAC,GAAM,gBAAOA,EAAOsF,iBAAd,YAAkCtF,EAAOuF,cAAzC,aAA2DvF,EAAOwF,eAAlE,YAAoFxF,EAAOyF,qBAEnJ,gBAAC7C,GAAA,EAAD,CAAgBzE,MAAM,OAAOY,OAAO,UAAU+C,UAAU,SACtD,gBAAChC,EAAA,EAAD,CAAeC,OAAQ,SAAAC,GAAM,gBAAOA,EAAO0F,WAAd,YAA4B1F,EAAO2F,eAElE,gBAAC/C,GAAA,EAAD,CAAgBzE,MAAM,iBAAiBY,OAAO,UAAU+C,UAAU,SAChE,gBAAChC,EAAA,EAAD,CAAeC,OAAQ,SAAAC,GAAM,gBAAOA,EAAO6E,YAAd,YAA6B7E,EAAO8E,YAApC,YAAmD9E,EAAO+E,KAA1D,aAAmE/E,EAAOsE,MAA1E,YAAmFtE,EAAOgF,YAEzH,gBAACkC,GAAA,EAAD,CAAYnI,OAAO,YACjB,gBAACW,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAWZ,OAAO,OAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,SAClB,gBAACe,EAAA,EAAD,CAAef,OAAO,UAAUZ,MAAM,UAAU4B,OAAQ,SAACC,EAAOjB,GAAR,OACtD,gBAACkB,EAAA,EAAD,CAAcD,OAAM,2BAAMA,GAAN,IAAc6F,UAAU7F,EAAO6F,UAAU9G,OAAQA,OACvE,gBAACY,EAAA,EAAD,CAAWZ,OAAO,YAGtB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,kBCpDXoI,GAAe,SAAAvI,GAAK,OAC/B,gBAACkC,EAAA,EAASlC,EACR,gBAAC0B,EAAA,EAAD,KACE,gBAACxB,EAAA,EAAD,CAAWiC,UAAQ,EAAChC,OAAO,OAC3B,gBAACD,EAAA,EAAD,CAAWC,OAAO,aAAawB,SAAUC,gBACzC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,gBAClB,gBAACD,EAAA,EAAD,CAAWC,OAAO,YAAYwB,SAAUC,gBACxC,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,gBAAgBwB,SAAUC,gBAC5C,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,gBAAgBwB,SAAUC,gBAC5C,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,mBAAmBwB,SAAUC,gBAC/C,gBAAC1B,EAAA,EAAD,CAAWX,MAAM,gBAAgBY,OAAO,SACxC,gBAACD,EAAA,EAAD,CAAWX,MAAM,gBAAgBY,OAAO,SACxC,gBAACD,EAAA,EAAD,CAAWC,OAAO,gBAAgBwB,SAAUC,gBAC5C,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,iBAAiBwB,SAAUC,gBAC7C,gBAAC1B,EAAA,EAAD,CAAWC,OAAO,kBAAkBwB,SAAUC,mBCd9C4G,GAAW,SAACC,EAAUjM,EAAIrB,GAAf,sBAAiCA,EAAKwK,SAE1C+C,GAAe,SAAA1I,GAAK,OAC/B,gBAACkC,EAAA,EAASlC,EACR,gBAAC0B,EAAA,EAAD,CAAY8G,SAAUA,IACpB,gBAACzH,EAAA,EAAD,CAAWZ,OAAO,OAClB,gBAACY,EAAA,EAAD,CAAWZ,OAAO,SAClB,gBAACY,EAAA,EAAD,CAAWxB,MAAM,SAASY,OAAO,WACjC,gBAACY,EAAA,EAAD,CAAWxB,MAAM,UAAUY,OAAO,YAClC,gBAACY,EAAA,EAAD,CAAWZ,OAAO,UAClB,gBAACE,EAAA,EAAD,CAAaF,OAAO,OAAOG,QAAU,CAAC,CAAC9D,GAAI,SAAUsD,KAAM,UAAW,CAACtD,GAAI,QAASsD,KAAM,eAKnF6I,GAAiB,SAAA3I,GAAK,OACjC,gBAACyB,EAAA,EAAWzB,EACV,gBAAC0B,EAAA,EAAD,CAAY8G,SAAUA,IACpB,gBAACtI,EAAA,EAAD,CAAWC,OAAO,WAClB,gBAACD,EAAA,EAAD,CAAWC,OAAO,eAClB,gBAACE,EAAA,EAAD,CAAaF,OAAO,OAAOG,QAAU,CAAC,CAAC9D,GAAI,SAAUsD,KAAM,UAAW,CAACtD,GAAI,QAASsD,KAAM,eClBnF8I,GAA2B,SAAA5I,GAAK,OAC3C,gBAACyB,EAAA,EAAWzB,EACV,gBAAC0B,EAAA,EAAD,KACE,gBAACxB,EAAA,EAAD,CAAWC,OAAO,YAClB,gBAACE,EAAA,EAAD,CAAaF,OAAO,OAAOG,QAAU,CAAC,CAAC9D,GAAI,OAAQsD,KAAM,QAAS,CAACtD,GAAI,WAAYsD,KAAM,eACzF,gBAACI,EAAA,EAAD,CAAWC,OAAO,UAClB,gBAAC6B,EAAA,EAAD,CAAczC,MAAM,UAAUY,OAAO,UAAU6C,cAAc,O,UCR7D6F,GAAeC,aAAmBjN,iCAA+BzB,GAiIxD2O,GA/HO,2BACjBF,IADiB,IAEpBG,QAAS,SAAChO,EAAUC,GAClB,OAAO4N,GAAaG,QAAQhO,EAAUC,GACnCsB,MAAK,SAAA0M,GAAI,MAAK,CACb9N,KAAM8N,EAAK9N,KAAKA,KAChBqC,MAAOyL,EAAKzL,WAIlB0L,OAAQ,SAAClO,EAAUC,GACjB,OAAO4N,GAAaK,OAAOlO,EAAUC,GAClCsB,MAAK,SAAA0M,GAAI,MAAK,CACb9N,KAAM8N,EAAK9N,KAAKA,UAItBgO,QAAS,SAACnO,EAAUC,GAClB,OAAO4N,GAAaM,QAAQnO,EAAUC,GACnCsB,MAAK,SAAA0M,GAAI,MAAK,CACb9N,KAAM8N,EAAK9N,KAAKA,UAItBiO,iBAAkB,SAACpO,EAAUC,GAC3B,IAAMoO,EAAS,mBAAmBC,KAAKrO,EAAOwL,QAC9C,OAAc,MAAV4C,EhB8ED,SAAP,sCgB5EaD,CAAiBpO,EAAUC,EADpB,UAAMoO,EAAO,GAAb,YAAmBpO,EAAOuB,GAA1B,YAAgCxB,IAGvC6N,GAAaO,iBAAiBpO,EAAUC,GAC5CsB,MAAK,SAAA0M,GAAI,MAAK,CACb9N,KAAM8N,EAAK9N,KAAKA,KAChBqC,MAAOyL,EAAKzL,WAKpBd,OAAQ,SAAC1B,EAAUC,GACjB,IAAKA,EAAOE,KAAKO,gBAAkBT,EAAOE,KAAKG,UAAYL,EAAOE,KAAKM,UACrE,OAAOoN,GAAanM,OAAO1B,EAAUC,GAGvC,OAAQD,GACN,IAAK,aACH,MAAqC,kBAAzBC,EAAOE,KAAKG,QACfuN,GAAanM,OAAO1B,EAAUC,GAEhCF,EAAYC,EAAUC,GAC1BsB,MAAM,SAAAJ,GAEL,OADAlB,EAAOE,KAAP,2BAAkBF,EAAOE,MAAzB,IAA+BG,QAASa,IACjC0M,GAAanM,OAAO1B,EAAUC,MAE3C,IAAK,WACH,MAA2C,kBAA/BA,EAAOE,KAAKO,cACfmN,GAAanM,OAAO1B,EAAUC,GAEhCF,EAAYC,EAAUC,GAC1BsB,MAAM,SAAAJ,GAEL,OADAlB,EAAOE,KAAP,2BAAkBF,EAAOE,MAAzB,IAA+BO,cAAeS,IACvC0M,GAAanM,OAAO1B,EAAUC,MAE3C,IAAK,UACH,MAAyB,WAArBA,EAAOE,KAAKK,KACyB,kBAA3BP,EAAOE,KAAKM,WAAkE,kBAA/BR,EAAOE,KAAKO,cAC9DmN,GAAanM,OAAO1B,EAAUC,GACO,kBAA3BA,EAAOE,KAAKM,WAAkE,kBAA/BR,EAAOE,KAAKO,cACrEX,EAAY,SAAUE,GAC1BsB,MAAM,SAAAJ,GAEL,OADAlB,EAAOE,KAAP,2BAAkBF,EAAOE,MAAzB,IAA+BO,cAAeS,IACvC0M,GAAanM,OAAO1B,EAAUC,MAEG,kBAA3BA,EAAOE,KAAKM,WAAkE,kBAA/BR,EAAOE,KAAKO,cACrEX,EAAYC,EAAUC,GAC1BsB,MAAM,SAAAJ,GAEL,OADAlB,EAAOE,KAAP,2BAAkBF,EAAOE,MAAzB,IAA+BM,UAAWU,IACnC0M,GAAanM,OAAO1B,EAAUC,MAGpCF,EAAYC,EAAUC,GAC1BsB,MAAM,SAAAJ,GAEL,OADAlB,EAAOE,KAAP,2BAAkBF,EAAOE,MAAzB,IAA+BM,UAAWU,IhBejD,SAAP,oCgBdqBoN,CAAavO,EAAUC,MAGU,kBAA3BA,EAAOE,KAAKM,UACtBoN,GAAanM,OAAO1B,EAAUC,GAGhCF,EAAYC,EAAUC,GAC1BsB,MAAM,SAAAJ,GAEL,OADAlB,EAAOE,KAAP,2BAAkBF,EAAOE,MAAzB,IAA+BM,UAAWU,IACnC0M,GAAanM,OAAO1B,EAAUC,QAO/CqB,OAAQ,SAACtB,EAAUC,GACjB,OAAKA,EAAOE,KAAKG,SAAYL,EAAOE,KAAKM,WAAcR,EAAOE,KAAKO,cAI5DX,EAAYC,EAAUC,GAC1BsB,MAAM,SAAAJ,GACL,OAAQnB,GACN,IAAK,aACH,OAAOsB,EAAOtB,EAAD,YAAC,eAAcC,EAAOE,MAAtB,IAA4BG,QAASa,IAAalB,GACjE,IAAK,UACH,MAAyB,WAArBA,EAAOE,KAAKK,KhB/BrB,SAAP,sCgBgCqBgO,CAAaxO,EAAD,YAAC,eAAcC,EAAOE,MAAtB,IAA4BM,UAAWU,IAAalB,GAElEqB,EAAOtB,EAAD,YAAC,eAAcC,EAAOE,MAAtB,IAA4BM,UAAWU,IAAalB,GACnE,IAAK,WACH,OAAOqB,EAAOtB,EAAD,YAAC,eAAcC,EAAOE,MAAtB,IAA4BO,cAAeS,IAAalB,OAdpEqB,EAAOtB,EAAUC,EAAOE,KAAMF,IAqBzCwO,kBAAmB,SAACzO,EAAUC,GAC5B,OhBWG,SAAP,oCgBXWyO,CAAwB1O,EAAUC,M,oBC7GvC0O,GAAeC,cAAqB,kBAAMC,OAAiB,KAAM,CAAEC,cAAc,IAqBxEC,GAnBH,kBACR,gBAACC,EAAA,EAAD,CAAO/L,aAAcA,EAAc4K,aAAeE,GAAmBY,aAAeA,IAClF,gBAACM,EAAA,EAAD,CAAUnK,KAAK,UAAUxF,QAAS,CAAEiF,MAAO,WAAa2K,KAAOrG,GAAcsG,KAAOhG,GAAc7H,OAAS8H,KAC3G,gBAAC6F,EAAA,EAAD,CAAUnK,KAAK,aAAaxF,QAAS,CAAEiF,MAAO,cAAgB2K,KAAOxJ,GAAiByJ,KAAOlI,GAAiB3F,OAASkF,KACvH,gBAACyI,EAAA,EAAD,CAAUnK,KAAK,gBAAgBxF,QAAS,CAAEiF,MAAO,iBAAmB2K,KAAO5F,GAAoB6F,KAAO5F,GAAoBjI,OAASkI,KACnI,gBAACyF,EAAA,EAAD,CAAUnK,KAAK,aAAaxF,QAAS,CAAEiF,MAAO,cAAgB2K,KAAOzF,GAAiB0F,KAAOzF,GAAiBpI,OAASqI,KACvH,gBAACsF,EAAA,EAAD,CAAUnK,KAAK,WAAWxF,QAAS,CAAEiF,MAAO,YAAc2K,KAAO/C,GAAegD,KAAO7C,GAAehL,OAAS8K,KAC/G,gBAAC6C,EAAA,EAAD,CAAUnK,KAAK,QAAQxF,QAAS,CAAEiF,MAAO,SAAW2K,KAAOlE,GAAYmE,KAAO9D,KAC9E,gBAAC4D,EAAA,EAAD,CAAUnK,KAAK,aAAaxF,QAAS,CAAEiF,MAAO,cAAgB2K,KAAOzC,GAAiB0C,KAAOzC,GAAiBpL,OAASqL,KACvH,gBAACsC,EAAA,EAAD,CAAUnK,KAAK,OAAOxF,QAAS,CAAEiF,MAAO,iBAAmB2K,KAAOrC,GAAWsC,KAAOnC,GAAW1L,OAAS2L,KAExG,gBAACgC,EAAA,EAAD,CAAUnK,KAAK,OAAOxF,QAAS,CAAEiF,MAAO,QAAU6K,KAAOlC,KACzD,gBAAC+B,EAAA,EAAD,CAAUnK,KAAK,UACf,gBAACmK,EAAA,EAAD,CAAUnK,KAAK,WAAWqK,KAAO5B,KACjC,gBAAC0B,EAAA,EAAD,CAAUnK,KAAK,YAAYqK,KAAOzB,GAAepM,OAASqM,KAC1D,gBAACsB,EAAA,EAAD,CAAUnK,KAAK,sBAAsBxD,OAASsM,KAC9C,gBAACqB,EAAA,EAAD,CAAUnK,KAAK,0BCzBDuK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASvJ,OACP,kBAAC,IAAMwJ,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzO,MAAK,SAAA0O,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrN,QAAQqN,MAAMA,EAAMC,c","file":"static/js/main.cd1e7a9c.chunk.js","sourcesContent":["import fetchTimeout from 'fetch-timeout';\nimport url from 'url';\nimport { fetchUtils } from 'react-admin';\nimport { stringify } from 'query-string';\n\nexport const countHeader = 'Content-Range';\n\nexport const fetchJson = (url, options = {}) => {\n  const token = localStorage.getItem('token');\n  if (!options.headers) {\n    options.headers = new Headers({ Accept: 'application/json'});\n  }\n  options.headers.set('Authorization', `Bearer ${token}`);\n  return fetchUtils.fetchJson(url, options);\n}\n\nexport async function uploadImage(resource, params) {\n  const data = new FormData();\n\n  switch (resource) {\n    case 'categories':\n      data.append('type', 'compose');\n      data.append('file', params.data.img_src.rawFile);\n      break;\n    case 'designs':\n      data.append('type', params.data.type);\n      data.append('file', params.data.asset_src.rawFile);\n      break;\n    case 'products':\n      data.append('type', 'thumbnail');\n      data.append('file', params.data.thumbnail_src.rawFile);\n      break;\n    case 'packet':\n      data.append('type', 'packet');\n      data.append('file', params.data.thumbnail_src.rawFile);\n      break;\n    default:\n      break;\n  }\n\n  const response = await fetchTimeout(\n    url.resolve(process.env.REACT_APP_URL, 'file/upload'),\n    {\n      method: 'POST',\n      headers: new Headers({ Accept: 'application/json'}),\n      body: data,\n    },\n    30000\n  );\n\n  const body = await response.json();\n  if ( body.status !== 'OK') throw body;\n\n  const s3_img_url = body.data;\n  return s3_img_url;\n};\n\nexport async function loginRequest(params) {\n  const response = await fetchTimeout(\n    url.resolve(process.env.REACT_APP_URL, 'api/login'),\n      {\n        method: 'POST',\n        body: JSON.stringify(params),\n        headers: new Headers({ 'Content-Type': 'application/json'}),\n      },\n      30000\n    );\n\n  const body = await response.json();\n  if (body.status !== 'OK') throw body;\n\n  return body.data;\n};\n\nexport async function create(resource, body, params) {\n  return fetchJson(`${process.env.REACT_APP_API_URL}/${resource}`, {\n      method: 'POST',\n      body: JSON.stringify(body),\n    })\n    .then(({ json }) => ({\n        data: { ...params.data, id: json.data.id },\n    }));\n};\n\nexport async function createPacket(resource, body, params) {\n  return uploadImage(\"packet\", params)\n    .then(thumbnail_url => {\n      return create(resource, {...body, thumbnail_src: thumbnail_url}, params);\n    });\n};\n\nexport async function update(resource, params) {\n  return fetchJson(`${process.env.REACT_APP_API_URL}/${resource}/${params.id}`, {\n    method: 'PUT',\n    body: JSON.stringify(params.data),\n  })\n  .then (({ json }) => ({\n    data: {...json.data, id: json.data.id},\n  }));\n};\n\nexport async function updatePacket(resource, params) {\n  return uploadImage(\"packet\", params)\n    .then(thumbnail_url => {\n      params.data = {...params.data, thumbnail_src: thumbnail_url};\n      return update(resource, params);\n    });\n};\n\nexport async function getManyReference(resource, params, endpoint) {\n  const { page, perPage } = params.pagination;\n  const { field, order } = params.sort;\n  const rangeStart = (page - 1) * perPage;\n  const rangeEnd = page * perPage - 1;\n  const query = {\n    sort: JSON.stringify([field, order]),\n    range: JSON.stringify([rangeStart, rangeEnd]),\n  };\n\n  return fetchJson(`${process.env.REACT_APP_API_URL}/${endpoint}?${stringify(query)}`, {\n    method: 'GET',\n  })\n  .then(({ headers, json }) => {\n    if (!headers.has(countHeader)) {\n      throw new Error(\n        `The ${countHeader} header is missing in the HTTP Response. The simple REST data provider expects responses for lists of resources to contain this header with the total number of results to build the pagination. If you are using CORS, did you declare ${countHeader} in the Access-Control-Expose-Headers header?`\n      );\n    }\n\n    return {\n      data: json.data,\n      total:\n        countHeader === 'Content-Range'\n        ? parseInt(headers.get('content-range').split('/').pop(), 10)\n        : parseInt(headers.get(countHeader.toLowerCase()))\n    };\n  });\n};\n\nexport async function refundCreditTransaction(resource, params) {\n  const endpoint = `credit-transactions/${params.id}/refund`;\n  return fetchJson(`${process.env.REACT_APP_API_URL}/${endpoint}`, {\n    method: 'GET'\n  })\n  .then(({json}) => {\n    return {\n      data: json.data\n    };\n  });\n};\n\nexport function loadImageUrl(value) {\n  console.log(\"hello?\");\n  if (!value || typeof (value) === \"string\") {\n    console.log(\"string\");\n    return { url: value};\n  } else {\n    console.log(value);\n    return value;\n  }\n};\n","import { loginRequest } from '../utils/helper';\n\nconst authProvider = {\n  login: ({ username, password }) => {\n    const query = {\n      email: username,\n      password: password\n    };\n\n    return loginRequest(query)\n      .then(login_data => {\n        localStorage.setItem('token', login_data.token);\n        localStorage.setItem('token_expires', login_data.api_token_expires);\n      });\n  },\n\n  logout: () => {\n    localStorage.removeItem('token');\n    return Promise.resolve();\n  },\n\n  checkError: ({ status }) => {\n    if (status === 401) {\n      localStorage.removeItem('token');\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n\n  checkAuth: () => {\n    if (localStorage.getItem('token')) {\n      const current = new Date();\n      const expires = new Date(localStorage.getItem('token_expires'));\n      return (expires && current.getTime() < expires) ? Promise.resolve() : Promise.reject();\n    }\n    return Promise.reject();\n  },\n\n  getPermissions: () => Promise.resolve(),\n};\n\nexport default authProvider;\n","import * as React from 'react';\nimport { FilterList, FilterListItem } from 'react-admin';\n\nexport const IsActiveFilter = () => (\n  <FilterList label=\"Active\">\n    <FilterListItem label=\"True\" value={{active: true}} />\n    <FilterListItem label=\"False\" value={{active: false}} />\n  </FilterList>\n);\n\nexport const IsColoredFilter = () => (\n  <FilterList label=\"Color\">\n    <FilterListItem label=\"True\" value={{color: true}} />\n    <FilterListItem label=\"False\" value={{color: false}} />\n  </FilterList>\n);\n\nexport const DesignTypeFilter = () => (\n  <FilterList label=\"Type\">\n    <FilterListItem label=\"Postcard\" value={{type: 'postcard'}} />\n    <FilterListItem label=\"Packet\" value={{type: 'packet'}} />\n    <FilterListItem label=\"Sticker\" value={{type: 'sticker' }} />\n  </FilterList>\n);\n","import * as React from \"react\";\nimport {\n  Filter,\n  SelectInput,\n  BooleanInput,\n  BooleanField,\n  FunctionField,\n  DeleteButton,\n  List,\n  Datagrid,\n  TextField,\n  ImageField,\n  Edit,\n  ImageInput,\n  SimpleForm,\n  TextInput,\n  required,\n  EditButton,\n  Create,\n} from \"react-admin\";\nimport { Card,\n  CardContent} from \"@material-ui/core\"; \nimport { loadImageUrl } from \"../utils/helper\";\nimport {IsActiveFilter} from '../utils/filters'\nconst types = [\n  { id: \"compose\", name: \"Compose\" },\n  { id: \"sticker\", name: \"Sticker\" },\n  { id: \"shop\", name: \"Shop\" },\n];\n\nconst CategoriesFilter = (props) => (\n  <Filter {...props}>\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\n    <SelectInput source=\"type\" choices={types} />\n  </Filter>\n);\n\nconst CategoriesSidebar = (props) => (\n  <Card>\n    <CardContent>\n      <IsActiveFilter />\n    </CardContent>\n  </Card>\n);\n\nexport const CategoriesList = (props) => (\n  <List {...props} aside={<CategoriesSidebar />} filters={<CategoriesFilter />}>\n    <Datagrid>\n      <TextField source=\"id\" />\n      <TextField source=\"name\" />\n      <TextField source=\"type\" />\n      <ImageField source=\"img_src\" title=\"Image\" />\n      <FunctionField\n        source=\"active\"\n        label=\"Active\"\n        render={(record, source) => (\n          <BooleanField\n            record={{ ...record, active: !!record.active }}\n            source={source}\n          />\n        )}\n      />\n      <EditButton />\n      <DeleteButton />\n    </Datagrid>\n  </List>\n);\n\nexport const CategoriesCreate = (props) => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"name\" validate={required()} />\n      <TextInput source=\"blurb\" />\n      <ImageInput\n        form={loadImageUrl}\n        source=\"img_src\"\n        title=\"img_src\"\n        label=\"Image\"\n        accept=\"image/*\"\n      >\n        <ImageField source=\"url\" />\n      </ImageInput>\n      <BooleanInput label=\"Premium\" source=\"premium\" />\n      <BooleanInput label=\"Active\" source=\"active\" />\n      <SelectInput source=\"type\" choices={types} />\n    </SimpleForm>\n  </Create>\n);\n\nexport const CategoriesEdit = (props) => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput disabled label=\"Id\" source=\"id\" />\n      <TextInput source=\"name\" validate={required()} />\n      <TextInput source=\"blurb\" />\n      <BooleanInput label=\"Active\" source=\"active\" />\n      <BooleanInput label=\"Premium\" source=\"premium\" />\n      <ImageInput\n        format={loadImageUrl}\n        source=\"img_src\"\n        label=\"Image\"\n        accept=\"image/*\"\n      >\n        <ImageField source=\"url\" />\n      </ImageInput>\n      <SelectInput source=\"type\" choices={types} />\n    </SimpleForm>\n  </Edit>\n);\n","import * as React from \"react\";\nimport {\n  Filter,\n  FilterLiveSearch,\n  ReferenceArrayInput,\n  SelectArrayInput,\n  FileInput,\n  FileField,\n  FunctionField,\n  BooleanInput,\n  BooleanField,\n  ReferenceInput,\n  SelectInput,\n  DeleteButton,\n  EditButton,\n  List,\n  Datagrid,\n  TextField,\n  ReferenceField,\n  DateField,\n  ImageField,\n  Create,\n  Edit,\n  SimpleForm,\n  TextInput,\n  required,\n  ImageInput,\n} from \"react-admin\";\nimport { loadImageUrl } from \"../utils/helper\";\nimport { useFormState } from \"react-final-form\";\nimport { IsActiveFilter, DesignTypeFilter, IsColoredFilter } from \"../utils/filters\";\nimport { Card as MuiCard, CardContent, withStyles } from \"@material-ui/core\";\n\nconst types = [\n  { id: \"postcard\", name: \"Postcard\" },\n  { id: \"sticker\", name: \"Sticker\" },\n  { id: \"packet\", name: \"Packet\" },\n];\n\nconst Card = withStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up(\"sm\")]: {\n      order: -1,\n      width: \"15em\",\n      marginRight: \"1em\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}))(MuiCard);\n\nconst DesignFilter = (props) => (\n  <Filter {...props}>\n    <TextInput label=\"Design Name\" source=\"name\" defaultValue=\"\" />\n    <ReferenceInput\n      label=\"Product\"\n      source=\"product_id\"\n      perPage={100}\n      reference=\"products\"\n      validate={required()}\n    >\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>\n    <ReferenceInput\n      label=\"Subcategory\"\n      source=\"subcategory_id\"\n      reference=\"subcategories\"\n      perPage={100}\n      validate={required()}\n    >\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>\n    <ReferenceArrayInput\n      label=\"Volunteers\"\n      source=\"volunteer_ids\"\n      reference=\"volunteers\"\n    >\n      <SelectArrayInput optionText=\"first_name\" />\n    </ReferenceArrayInput>\n  </Filter>\n);\n\nconst FilterSidebar = (props) => (\n  <Card>\n    <CardContent>\n      <FilterLiveSearch source=\"q\" />\n      <IsActiveFilter />\n      <DesignTypeFilter />\n      <IsColoredFilter />\n    </CardContent>\n  </Card>\n);\n\nconst DesignUpload = (props) => {\n  const { values } = useFormState();\n  switch (values.type) {\n    case \"packet\":\n      return (\n        <div>\n          <ImageInput\n            format={loadImageUrl}\n            source=\"thumbnail_src\"\n            label=\"Thumbnail\"\n            accept=\"image/*\"\n            validate={required()}\n            {...props}\n          >\n            <ImageField source=\"url\" />\n          </ImageInput>\n          <FileInput\n            source=\"asset_src\"\n            label=\"PDF\"\n            accept=\"application/pdf\"\n            validate={required()}\n            {...props}\n          >\n            <FileField source=\"src\" title=\"title\" />\n          </FileInput>\n        </div>\n      );\n    default:\n      return (\n        <ImageInput\n          format={loadImageUrl}\n          source=\"asset_src\"\n          label=\"Image\"\n          accept=\"image/*\"\n          validate={required()}\n          {...props}\n        >\n          <ImageField source=\"url\" />\n        </ImageInput>\n      );\n  }\n};\n\nexport const DesignsList = (props) => (\n  <List {...props} aside={<FilterSidebar />} filters={<DesignFilter />}>\n    <Datagrid rowClick=\"edit\">\n      <TextField source=\"id\" />\n      <DateField source=\"created_at\" />\n      <TextField source=\"name\" />\n      <TextField source=\"type\" />\n      <ImageField source=\"thumbnail_src\" title=\"image\" />\n      <ReferenceField\n        label=\"Subcategory\"\n        source=\"subcategory_id\"\n        reference=\"subcategories\"\n        sortBy=\"name\"\n      >\n        <TextField source=\"name\" />\n      </ReferenceField>\n      <FunctionField\n        source=\"active\"\n        label=\"Active\"\n        render={(record, source) => (\n          <BooleanField\n            record={{ ...record, active: !!record.active }}\n            source={source}\n          />\n        )}\n      />\n      <FunctionField\n        source=\"color\"\n        label=\"Color\"\n        render={(record, source) => (\n          <BooleanField\n            record={{ ...record, active: !!record.color }}\n            source={source}\n          />\n        )}\n      />\n      <FunctionField\n        source=\"double_sided\"\n        label=\"Double-Sided\"\n        render={(record, source) => (\n          <BooleanField\n            record={{ ...record, active: !!record.double_sided }}\n            source={source}\n          />\n        )}\n      />\n      <EditButton label=\"Edit\" />\n      <DeleteButton label=\"Delete\" />\n    </Datagrid>\n  </List>\n);\n\nexport const DesignsEdit = (props) => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput disabled label=\"ID\" source=\"id\" />\n      <TextInput source=\"name\" validate={required()} />\n      <SelectInput source=\"type\" validate={required()} choices={types} />\n      <ReferenceInput\n        label=\"Subcategory\"\n        source=\"subcategory_id\"\n        reference=\"subcategories\"\n        perPage={100}\n        validate={required()}\n      >\n        <SelectInput optionText=\"name\" />\n      </ReferenceInput>\n      <BooleanInput label=\"Active\" source=\"active\" defaultValue={true} />\n      <BooleanInput label=\"Color (only relevant for packets)\" source=\"color\" />\n      <BooleanInput\n        label=\"Double-Sided (only relevant for packets)\"\n        source=\"double_sided\"\n        defaultValue={false}\n      />\n      <ReferenceInput\n        label=\"Product\"\n        source=\"product_id\"\n        perPage={100}\n        reference=\"products\"\n        validate={required()}\n      >\n        <SelectInput optionText=\"name\" />\n      </ReferenceInput>\n      <TextInput source=\"blurb\" />\n      <DesignUpload />\n      <ReferenceArrayInput\n        label=\"Volunteers\"\n        source=\"volunteer_ids\"\n        reference=\"volunteers\"\n      >\n        <SelectArrayInput optionText=\"first_name\" />\n      </ReferenceArrayInput>\n    </SimpleForm>\n  </Edit>\n);\n\nexport const DesignsCreate = (props) => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"name\" validate={required()} />\n      <SelectInput source=\"type\" validate={required()} choices={types} />\n      <ReferenceInput\n        label=\"Subcategory\"\n        source=\"subcategory_id\"\n        reference=\"subcategories\"\n        perPage={100}\n        validate={required()}\n      >\n        <SelectInput optionText=\"name\" />\n      </ReferenceInput>\n      <BooleanInput label=\"Active\" source=\"active\" />\n      <BooleanInput\n        label=\"Color (only relevant for packets)\"\n        source=\"color\"\n        defaultValue={false}\n      />\n      <BooleanInput\n        label=\"Double-Sided (only relevant for packets)\"\n        source=\"double_sided\"\n        defaultValue={false}\n      />\n      <ReferenceInput\n        label=\"Product\"\n        source=\"product_id\"\n        reference=\"products\"\n        perPage={100}\n        validate={required()}\n      >\n        <SelectInput optionText=\"name\" />\n      </ReferenceInput>\n      <TextInput source=\"blurb\" />\n      <DesignUpload />\n      <ReferenceArrayInput\n        label=\"Volunteers\"\n        source=\"volunteer_ids\"\n        reference=\"volunteers\"\n      >\n        <SelectArrayInput optionText=\"first_name\" />\n      </ReferenceArrayInput>\n    </SimpleForm>\n  </Create>\n);\n","import * as React from \"react\";\nimport { Filter, FunctionField, BooleanField, BooleanInput, ReferenceInput, SelectInput, DeleteButton, EditButton, List, Datagrid, TextField, ReferenceField, DateField, SimpleForm, TextInput, Edit, Create, required } from 'react-admin';\n\nconst SubcategoriesFilter = (props) => (\n  <Filter {...props}>\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\n  </Filter>\n);\nexport const SubcategoriesList = props => (\n  <List {...props} filters={<SubcategoriesFilter />}>\n    <Datagrid rowClick=\"edit\">\n      <TextField source=\"id\" />\n      <TextField source=\"name\" />\n      <DateField source=\"created_at\" />\n      <DateField source=\"updated_at\" />\n      <ReferenceField label=\"Category\" source=\"design_category_id\" reference=\"categories\">\n        <TextField source=\"name\" />\n      </ReferenceField>\n      <FunctionField source=\"active\" label=\"Active\" render={(record,source) =>\n        <BooleanField record={{...record,active:!!record.active}} source={source}/>}/>\n      <EditButton />\n      <DeleteButton />\n    </Datagrid>\n  </List>\n);\n\nexport const SubcategoriesEdit = props => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput disabled source=\"id\" />\n      <TextInput source=\"name\" validate={required()} />\n      <ReferenceInput label=\"Category\" source=\"design_category_id\" reference=\"categories\" validate={required()}>\n        <SelectInput optionText=\"name\" />\n      </ReferenceInput>\n      <TextInput source=\"bg_color\" />\n      <BooleanInput label=\"Active\" source=\"active\" defaultValue={true}/>\n    </SimpleForm>\n  </Edit>\n);\n\nexport const SubcategoriesCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"name\" validate={required()} />\n      <ReferenceInput label=\"Category\" source=\"design_category_id\" reference=\"categories\" validate={required()}>\n        <SelectInput optionText=\"name\" />\n      </ReferenceInput>\n      <TextInput source=\"bg_color\" />\n      <BooleanInput label=\"Active\" source=\"active\" defaultValue={true}/>\n    </SimpleForm>\n  </Create>\n);\n","import * as React from \"react\";\nimport { BooleanField, FunctionField, BooleanInput, SelectInput, DeleteButton, EditButton, List, Datagrid, TextField, SimpleForm, TextInput, Edit, Create, required } from 'react-admin';\n\nexport const VolunteersList = props => (\n  <List {...props}>\n    <Datagrid rowClick=\"edit\">\n      <TextField source=\"id\" />\n      <TextField source=\"first_name\" />\n      <TextField source=\"last_name\" />\n      <TextField source=\"type\" />\n      <TextField source=\"email\" />\n      <FunctionField source=\"active\" label=\"Active\" render={(record,source) =>\n        <BooleanField record={{...record,active:!!record.active}} source={source}/>}/>\n      <EditButton />\n      <DeleteButton />\n    </Datagrid>\n  </List>\n);\n\n\nexport const VolunteersEdit = props => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput disabled source=\"id\" />\n      <TextInput source=\"first_name\" validate={required()} />\n      <TextInput source=\"last_name\" validate={required()} />\n      <SelectInput source=\"type\" validate={required()} choices={[\n        { id: 'designer', name: 'Designer'},\n        { id: 'content_researcher', name: 'Content Researcher' }\n      ]} />\n      <TextInput source=\"email\" validate={required()}/>\n      <BooleanInput label=\"Active\" source=\"active\" />\n    </SimpleForm>\n  </Edit>\n);\n\nexport const VolunteersCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"first_name\" validate={required()} />\n      <TextInput source=\"last_name\" validate={required()} />\n      <SelectInput source=\"type\" validate={required()} choices={[\n        { id: 'designer', name: 'Designer'},\n        { id: 'content_researcher', name: 'Content Researcher' }\n      ]} />\n      <TextInput source=\"email\" validate={required()} />\n      <BooleanInput label=\"Active\" source=\"active\" />\n    </SimpleForm>\n  </Create>\n);\n","import * as React from \"react\";\nimport { Link, useMutation, Button } from 'react-admin';\n\nexport const LobField = ({ source, record = {} }) =>\n  <a href={\"https://dashboard.lob.com/#/letters/\" + record[source]}>{record[source]}</a>;\nLobField.defaultProps = { label: 'Lob ID' };\n\nexport const RefundButton = ({ record }) => {\n  const [refund] = useMutation({\n    type: 'refundTransaction',\n    resource: 'credit-transactions',\n    payload: { id: record.id }\n  });\n\n  return (\n    <Button label=\"Refund\" onClick={refund} />\n  )\n};\n\nexport const AssignOrgUserButton = ({ record }) => (\n  <Button\n    component={Link}\n    to={{\n      pathname: \"/org-users/create\",\n      state: { record: { org_id: record.id }}\n    }}\n    label=\"Add Org User\"\n  />\n);\n\nexport const CreateCreditTransactionButtion = ({ record }) => (\n  <Button\n    component={Link}\n    to={{\n      pathname: \"/credit-transactions/create\",\n      state: {record: {user_id: record.id}}\n    }}\n    label=\"Add Credit Transaction\"\n  />\n);\n","import * as React from \"react\";\nimport { BooleanField, ShowButton, DeleteButton, SelectInput, FunctionField, Filter, ReferenceField, FormTab, TabbedForm, ReferenceManyField, required, Datagrid, TextField, List, EditButton, TextInput, Edit } from 'react-admin';\nimport { LobField, RefundButton, CreateCreditTransactionButtion } from '../utils/toolboxComponents';\n\nconst UserFilter = (props) => (\n  <Filter {...props}>\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\n  </Filter>\n);\n\nconst referrerChoices = [\n  {id: 'Ameelio Ambassador', name: 'Heard from an Ameelio Ambassador'},\n  {id: 'Recommendation from Friends or Family', name: 'Recommendation from Friends or Family'},\n  {id: 'Incarcerated Loved-One', name: 'Incarcerated Loved-One'},\n  {id: 'Facebook/Instagram', name: 'Facebook/Instagram'},\n  {id: 'News/Radio/TV', name: 'News/Radio/TV'},\n  {id: 'Internet search', name: 'Internet search'},\n  {id: 'Other', name: 'Other'}\n];\n\nexport const UsersList = props => (\n  <List filters={<UserFilter />} {...props}>\n    <Datagrid rowClick=\"edit\">\n      <TextField source=\"id\" />\n      <TextField source=\"first_name\" />\n      <TextField source=\"last_name\" />\n      <TextField source=\"email\" />\n      <FunctionField label=\"Address\" render={record => `${record.addr_line_1} ${record.addr_line_2} ${record.city}, ${record.state} ${record.postal}`} />\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\nexport const UsersEdit = props => (\n  <Edit {...props}>\n    <TabbedForm>\n    <FormTab label=\"user info\">\n      <TextInput disabled source=\"id\" />\n      <TextInput source=\"first_name\" validate={required()} />\n      <TextInput source=\"last_name\" validate={required()} />\n      <TextInput source=\"email\" validate={required()} />\n      <TextInput source=\"addr_line_1\" validate={required()} />\n      <TextInput source=\"addr_line_2\" />\n      <TextInput source=\"city\" validate={required()} />\n      <TextInput source=\"state\" validate={required()} />\n      <TextInput source=\"postal\" validate={required()} />\n      <TextInput source=\"country\" validate={required()} />\n      <TextInput label=\"Credits\" source=\"credit\" validate={required()} />\n      <TextInput source=\"credit_reset\" validate={required()} />\n      <TextInput source=\"coins\" validate={required()} />\n      <SelectInput disabled source=\"referer\" choices={referrerChoices} />\n    </FormTab>\n\n    <FormTab label=\"Contacts\">\n      <ReferenceManyField reference=\"contacts\" label=\"Contacts\" target=\"_nested_users_id\">\n        <Datagrid rowClick=\"edit\">\n          <TextField source=\"id\" />\n          <TextField source=\"first_name\" />\n          <TextField source=\"last_name\" />\n          <TextField source=\"facility_name\" />\n          <FunctionField label=\"Facility Address\" render={record => `${record.facility_address} ${record.facility_city}, ${record.facility_state} ${record.facility_postal}`} />\n          <TextField source=\"inmate_number\" />\n          <TextField source=\"relationship\" />\n          <EditButton />\n          <DeleteButton />\n        </Datagrid>\n      </ReferenceManyField>\n    </FormTab>\n\n    <FormTab label=\"Mail\">\n      <ReferenceManyField reference=\"mail\" label=\"Mail\" target=\"_nested_users_id\">\n        <Datagrid>\n          <TextField source=\"id\" />\n          <LobField source=\"lob_id\" />\n          <TextField source=\"created_at\" />\n          <TextField source=\"contact_name\" />\n          <TextField source=\"status\" />\n          <ReferenceField label=\"Contact\" source=\"contact_id\" reference=\"contacts\">\n            <FunctionField render={record => `${record.first_name} ${record.last_name}`} />\n          </ReferenceField>\n          <ShowButton />\n        </Datagrid>\n      </ReferenceManyField>\n    </FormTab>\n\n    <FormTab label=\"Transactions\">\n      <CreateCreditTransactionButtion />\n      <ReferenceManyField reference=\"credit-transactions\" label=\"Credit Transactions\" target=\"_nested_users_id\">\n        <Datagrid>\n          <TextField source=\"id\" />\n          <TextField source=\"created_at\" />\n          <TextField source=\"type\" />\n          <TextField source=\"status\" />\n          <FunctionField source=\"premium\" label=\"Premium\" render={(record,source) =>\n            <BooleanField record={{...record,premium:!!record.premium}} source={source}/>}/>\n          <TextField source=\"price\" />\n          <TextField label=\"Mail ID\" source=\"letter_id\" />\n          <RefundButton />\n        </Datagrid>\n      </ReferenceManyField>\n\n      <ReferenceManyField reference=\"stripe-transactions\" label=\"Stripe Transactions\" target=\"_nested_users_id\">\n        <Datagrid>\n          <TextField source=\"id\" />\n          <TextField source=\"amount\" />\n          <TextField source=\"status\" />\n          <ReferenceField source=\"pack_id\" reference=\"packs\" label=\"Pack\">\n            <TextField source=\"name\" />\n          </ReferenceField>\n        </Datagrid>\n      </ReferenceManyField>\n    </FormTab>\n    </TabbedForm>\n  </Edit>\n);\n","import * as React from 'react';\nimport { loadImageUrl } from '../utils/helper';\nimport { Filter, EditButton, List, Datagrid, TextField, NumberInput, FunctionField, BooleanField, Create, SimpleForm, TextInput, ImageInput, ImageField, BooleanInput, required, Edit } from 'react-admin';\n\nconst ProductsFilter = (props) => (\n  <Filter {...props}>\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\n  </Filter>\n);\n\nexport const ProductsList = props => (\n  <List filters={<ProductsFilter />}  {...props}>\n    <Datagrid>\n      <TextField source=\"id\" />\n      <TextField source=\"name\" />\n      <TextField source=\"price\" />\n      <ImageField source=\"thumbnail_src\" title=\"image\" />\n      <FunctionField source=\"premium\" label=\"Premium\" render={(record, source) =>\n        <BooleanField record={{...record, premium: !!record.premium}} source={source}/>}/>\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\nexport const ProductsCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"name\" validate={required()}/>\n      <NumberInput source=\"price\" validate={required()}/>\n      <ImageInput form={ loadImageUrl } source=\"thumbnail_src\" title=\"thumbnail_src\" label=\"Image\" accept=\"image/*\">\n        <ImageField source=\"url\" />\n      </ImageInput>\n      <BooleanInput label=\"Premium\" source=\"premium\" defaultValue={false} />\n      <NumberInput source=\"cost\" label=\"Unit cost (in cents e.g $4.99 = 499)\"  validate={required()}/>\n    </SimpleForm>\n  </Create>\n);\n\nexport const ProductsEdit = props => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput disabled label=\"ID\" source=\"id\" />\n      <TextInput source=\"name\" validate={required()} />\n      <TextInput source=\"price\" validate={required()} />\n      <NumberInput source=\"cost\" label=\"Unit cost (in cents e.g $4.99 = 499)\"  validate={required()}/>\n      <ImageInput form={ loadImageUrl } source=\"thumbnail_src\" title=\"thumbnail_src\" label=\"Image\" accept=\"image/*\">\n        <ImageField source=\"url\" />\n      </ImageInput>\n      <BooleanInput label=\"Premium\" source=\"premium\" />\n    </SimpleForm>\n  </Edit>\n);\n","import * as React from \"react\";\nimport { Filter, SearchInput, EditButton, DeleteButton, List, TextField, Datagrid, Edit, SimpleForm, TextInput, BooleanInput, Create, required } from 'react-admin';\n\nconst FacilitiesFilter = props => (\n  <Filter {...props}>\n    <SearchInput source=\"q\" alwaysOn />\n  </Filter>\n);\n\nexport const FacilitiesList = props => (\n  <List {...props} filters={<FacilitiesFilter />} >\n    <Datagrid rowClick=\"edit\">\n      <TextField source=\"id\"/>\n      <TextField source=\"full_name\" />\n      <TextField source=\"address\" />\n      <TextField source=\"city\" />\n      <TextField source=\"state\" />\n      <TextField source=\"postal\" />\n      <TextField source=\"type\" />\n      <TextField source=\"phone\" />\n      <EditButton />\n      <DeleteButton />\n    </Datagrid>\n  </List>\n);\n\nexport const FacilitiesEdit = props => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput disabled source=\"id\" />\n      <TextInput source=\"name\" />\n      <TextInput source=\"full_name\" />\n      <TextInput source=\"address\" />\n      <TextInput source=\"city\" />\n      <TextInput source=\"state\" />\n      <TextInput source=\"postal\" />\n      <TextInput source=\"type\" />\n      <BooleanInput label=\"Federal\" source=\"federal\" />\n      <TextInput source=\"phone\" />\n      <TextInput source=\"link\" />\n      <TextInput source=\"unique\" />\n    </SimpleForm>\n  </Edit>\n);\n\nexport const FacilitiesCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"name\" validate={required()}/>\n      <TextInput source=\"full_name\" validate={required()}/>\n      <TextInput source=\"address\" validate={required()}/>\n      <TextInput source=\"city\" validate={required()}/>\n      <TextInput source=\"state\" validate={required()}/>\n      <TextInput source=\"postal\" validate={required()}/>\n      <TextInput source=\"type\" />\n      <BooleanInput label=\"Federal\" source=\"federal\" />\n      <TextInput source=\"phone\" />\n      <TextInput source=\"link\" />\n      <TextInput source=\"unique\" />\n    </SimpleForm>\n  </Create>\n);\n","import * as React from \"react\";\nimport { TabbedForm, FormTab, ReferenceManyField, Filter, FunctionField, BooleanInput, DeleteButton, EditButton, List, Datagrid, TextField, Create, Edit, SimpleForm, TextInput, required } from 'react-admin';\nimport { AssignOrgUserButton } from '../utils/toolboxComponents'\n\nconst OrgFilter = props => (\n  <Filter {...props}>\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\n  </Filter>\n);\n\nexport const OrgsList = props => (\n  <List filters={ <OrgFilter /> } {...props}>\n    <Datagrid rowClick=\"edit\">\n      <TextField source=\"id\" />\n      <TextField source=\"name\" />\n      <TextField source=\"business_name\" />\n      <TextField label=\"EIN\" source=\"ein\" />\n      <FunctionField label=\"Address\" render={record => `${record.address_line_1} ${record.address_line_2} ${record.city}, ${record.state} ${record.postal}`} />\n      <EditButton />\n      <DeleteButton />\n    </Datagrid>\n  </List>\n);\n\nexport const OrgsEdit = props => (\n  <Edit {...props}>\n    <TabbedForm>\n      <FormTab label=\"Org info\">\n        <TextInput disabled label=\"ID\" source=\"id\" />\n        <TextInput source=\"name\" validate={required()} />\n        <TextInput label=\"Business Name\" source=\"business_name\" validate={required()} />\n        <TextInput source=\"ein\" validate={required()} />\n        <TextInput label=\"Address Line 1\" source=\"address_line_1\" validate={required()} />\n        <TextInput label=\"Address Line 2\" source=\"address_line_2\" />\n        <TextInput source=\"city\" validate={required()} />\n        <TextInput source=\"state\" validate={required()} />\n        <TextInput source=\"postal\" validate={required()} />\n        <TextInput source=\"website\" validate={required()} />\n        <TextInput label=\"Color First Page\" source=\"color_first_page_price\" />\n        <TextInput label=\"Color Extra Page\" source=\"color_extra_page_price\" />\n        <TextInput label=\"B&W First Page\" source=\"bw_first_page_price\" />\n        <TextInput label=\"B&W Extra Page\" source=\"bw_extra_page_price\" />\n        <BooleanInput label=\"Legal\" source=\"is_legal\" />\n      </FormTab>\n\n      <FormTab label=\"Contacts\">\n        <ReferenceManyField reference=\"contacts\" label=\"Contacts\" target=\"_nested_orgs_id\">\n          <Datagrid>\n            <TextField source=\"id\" />\n            <TextField source=\"first_name\" />\n            <TextField source=\"last_name\" />\n            <TextField source=\"facility_name\" />\n            <FunctionField label=\"Facility Address\" render={record => `${record.facility_address} ${record.facility_city}, ${record.facility_state} ${record.facility_postal}`} />\n            <EditButton />\n            <DeleteButton />\n          </Datagrid>\n        </ReferenceManyField>\n      </FormTab>\n\n      <FormTab label=\"Volunteers\">\n        <AssignOrgUserButton />\n        <ReferenceManyField reference=\"org-users\" label=\"Users\" target=\"_nested_orgs_id\">\n          <Datagrid>\n            <TextField source=\"id\" />\n            <TextField source=\"name\" />\n            <TextField source=\"role\" />\n            <TextField source=\"email\" />\n            <EditButton />\n          </Datagrid>\n        </ReferenceManyField>\n      </FormTab>\n    </TabbedForm>\n  </Edit>\n);\n\nexport const OrgsCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput disabled label=\"ID\" source=\"id\" />\n      <TextInput source=\"name\" validate={required()} />\n      <TextInput label=\"Business Name\" source=\"business_name\" validate={required()} />\n      <TextInput source=\"ein\" validate={required()} />\n      <TextInput label=\"Address Line 1\" source=\"address_line_1\" validate={required()} />\n      <TextInput label=\"Address Line 2\" source=\"address_line_2\" />\n      <TextInput source=\"city\" validate={required()} />\n      <TextInput source=\"state\" validate={required()} />\n      <TextInput source=\"postal\" validate={required()} />\n      <TextInput source=\"website\" validate={required()} />\n      <TextInput label=\"Color First Page\" source=\"color_first_page_price\" />\n      <TextInput label=\"Color Extra Page\" source=\"color_extra_page_price\" />\n      <TextInput label=\"B&W First Page\" source=\"bw_first_page_price\" />\n      <TextInput label=\"B&W Extra Page\" source=\"bw_extra_page_price\" />\n      <BooleanInput label=\"Legal\" source=\"is_legal\" />\n    </SimpleForm>\n  </Create>\n);\n","import * as React from \"react\";\nimport { ArrayField, BooleanField, UrlField, FunctionField, TextField, Show, SimpleShowLayout, List, Datagrid, DateField, ReferenceField } from 'react-admin';\nimport { LobField } from '../utils/toolboxComponents';\n\nexport const MailList = props => (\n  <List {...props}>\n    <Datagrid rowClick=\"show\">\n      <TextField source=\"id\" />\n      <ReferenceField label=\"Sender Name\" source=\"user_id\" reference=\"users\">\n        <FunctionField render={record => `${record.first_name} ${record.last_name}`} />\n      </ReferenceField>\n      <ReferenceField label=\"Sender Email\" source=\"user_id\" reference=\"users\">\n        <TextField source=\"email\" />\n      </ReferenceField>\n      <ReferenceField label=\"Contact\" source=\"contact_id\" reference=\"contacts\" >\n        <FunctionField render={record => `${record.first_name} ${record.last_name}`} />\n      </ReferenceField>\n      <ReferenceField label=\"Facility Address\" source=\"contact_id\" reference=\"contacts\">\n        <FunctionField render={record => `${record.facility_address} ${record.facility_city}, ${record.facility_state} ${record.facility_postal}`} />\n      </ReferenceField>\n    </Datagrid>\n  </List>\n);\n\nexport const MailShow = props => (\n  <Show {...props}>\n    <SimpleShowLayout>\n      <TextField source=\"id\" />\n      <LobField label=\"Lob ID\" source=\"lob_id\" />\n      <DateField label=\"Last Lob Status Update\" source=\"last_lob_status_update\" />\n      <DateField source=\"estimated_arrival\" />\n      <TextField label=\"Lob Status\" source=\"lob_status\" />\n      <TextField source=\"type\" />\n      <UrlField label=\"View PDF\" source=\"pdf_url\" />\n      <ReferenceField label=\"To\" source=\"contact_id\" reference=\"contacts\">\n        <FunctionField render={record => `${record.first_name} ${record.last_name}`} />\n      </ReferenceField>\n      <ReferenceField label=\"Facility Address\" source=\"contact_id\" reference=\"contacts\">\n        <FunctionField label=\"Facility Address\" render={record => `${record.facility_address} ${record.facility_city}, ${record.facility_state} ${record.facility_postal}`} />\n      </ReferenceField>\n      <ReferenceField label=\"From\" source=\"user_id\" reference=\"users\">\n        <FunctionField render={record => `${record.first_name} ${record.last_name}`} />\n      </ReferenceField>\n      <ReferenceField label=\"Return Address\" source=\"user_id\" reference=\"users\">\n        <FunctionField render={record => `${record.addr_line_1} ${record.addr_line_2} ${record.city}, ${record.state} ${record.postal}`} />\n      </ReferenceField>\n      <ArrayField source=\"products\">\n        <Datagrid>\n          <TextField source=\"id\" />\n          <TextField source=\"name\" />\n          <FunctionField source=\"premium\" label=\"Premium\" render={(record,source) =>\n            <BooleanField record={{...record, premium:!!record.premium}} source={source}/>}/>\n          <TextField source=\"price\" />\n        </Datagrid>\n      </ArrayField>\n      <TextField source=\"page_count\" />\n    </SimpleShowLayout>\n  </Show>\n);\n","import * as React from \"react\";\nimport { Edit, SimpleForm, TextInput, required } from 'react-admin';\n\nexport const ContactsEdit = props => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput disabled source=\"id\" />\n      <TextInput source=\"first_name\" validate={required()} />\n      <TextInput source=\"middle_name\" />\n      <TextInput source=\"last_name\" validate={required()} />\n      <TextInput source=\"inmate_number\" validate={required()} />\n      <TextInput source=\"facility_name\" validate={required()} />\n      <TextInput source=\"facility_address\" validate={required()} />\n      <TextInput label=\"Facility Unit\" source=\"unit\" />\n      <TextInput label=\"Facility Dorm\" source=\"dorm\" />\n      <TextInput source=\"facility_city\" validate={required()} />\n      <TextInput source=\"facility_state\" validate={required()} />\n      <TextInput source=\"facility_postal\" validate={required()} />\n    </SimpleForm>\n  </Edit>\n);\n","import * as React from \"react\";\nimport { TextField, SelectInput, Edit, SimpleForm, TextInput, Create } from 'react-admin';\n\nconst redirect = (basePath, id, data) => `/orgs/${data.org_id}`;\n\nexport const OrgUsersEdit = props => (\n  <Edit {...props}>\n    <SimpleForm redirect={redirect}>\n      <TextField source=\"id\" />\n      <TextField source=\"name\" />\n      <TextField label=\"Org ID\" source=\"org_id\" />\n      <TextField label=\"User ID\" source=\"user_id\" />\n      <TextField source=\"email\" />\n      <SelectInput source=\"role\" choices={ [{id: 'member', name: 'Member'}, {id: 'admin', name: 'Admin'}] } />\n    </SimpleForm>\n  </Edit>\n);\n\nexport const OrgUsersCreate = props => (\n  <Create {...props}>\n    <SimpleForm redirect={redirect}>\n      <TextInput source=\"org_id\" />\n      <TextInput source=\"user_email\" />\n      <SelectInput source=\"role\" choices={ [{id: 'member', name: 'Member'}, {id: 'admin', name: 'Admin'}] } />\n    </SimpleForm>\n  </Create>\n);\n","import * as React from \"react\";\nimport { TextInput, SimpleForm, Create, SelectInput, BooleanInput } from 'react-admin';\n\n// const redirect = (basePath, id, data) => `/users/${data.user_id}`;\n\nexport const CreditTransactionsCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"user_id\" />\n      <SelectInput source=\"type\" choices={ [{id: 'gift', name: 'Gift'}, {id: 'referral', name: 'Referral'}] } />\n      <TextInput source=\"price\" />\n      <BooleanInput label=\"Premium\" source=\"premium\" defaultValue={false}/>\n    </SimpleForm>\n  </Create>\n);\n","import simpleRestProvider from 'ra-data-simple-rest';\nimport { uploadImage, create, fetchJson, createPacket, getManyReference, refundCreditTransaction, updatePacket } from '../utils/helper';\n\nconst dataProvider = simpleRestProvider(process.env.REACT_APP_API_URL, fetchJson);\n\nconst baseDataProvider = {\n  ...dataProvider,\n  getList: (resource, params) => {\n    return dataProvider.getList(resource, params)\n      .then(resp => ({\n        data: resp.data.data,\n        total: resp.total,\n      }));\n  },\n\n  getOne: (resource, params) => {\n    return dataProvider.getOne(resource, params)\n      .then(resp => ({\n        data: resp.data.data,\n      }));\n  },\n\n  getMany: (resource, params) => {\n    return dataProvider.getMany(resource, params)\n      .then(resp => ({\n        data: resp.data.data,\n      }));\n  },\n\n  getManyReference: (resource, params) => {\n    const nested = /_nested_(.*)_id/g.exec(params.target);\n    if (nested != null) {\n      const endpoint = `${nested[1]}/${params.id}/${resource}`;\n      return getManyReference(resource, params, endpoint);\n    } else {\n      return dataProvider.getManyReference(resource, params)\n        .then(resp => ({\n          data: resp.data.data,\n          total: resp.total,\n        }));\n    }\n  },\n\n  update: (resource, params) => { // need to clean up!!\n    if (!params.data.thumbnail_src && !params.data.img_src && !params.data.asset_src) {\n      return dataProvider.update(resource, params);\n    }\n\n    switch (resource) {\n      case 'categories':\n        if (typeof (params.data.img_src) === \"string\") {\n          return dataProvider.update(resource, params);\n        }\n        return uploadImage(resource, params)\n          .then( s3_img_url => {\n            params.data = {...params.data, img_src: s3_img_url};\n            return dataProvider.update(resource, params);\n          });\n      case 'products':\n        if (typeof (params.data.thumbnail_src) === \"string\") {\n          return dataProvider.update(resource, params);\n        }\n        return uploadImage(resource, params)\n          .then( s3_img_url => {\n            params.data = {...params.data, thumbnail_src: s3_img_url};\n            return dataProvider.update(resource, params);\n          });\n      case 'designs':\n        if (params.data.type === \"packet\") {\n          if (typeof (params.data.asset_src) === \"string\" && typeof (params.data.thumbnail_src) === \"string\") {\n            return dataProvider.update(resource, params);\n          } else if (typeof (params.data.asset_src) === \"string\" && typeof (params.data.thumbnail_src) !== \"string\") {\n            return uploadImage(\"packet\", params)\n              .then( s3_img_url => {\n                params.data = {...params.data, thumbnail_src: s3_img_url};\n                return dataProvider.update(resource, params);\n              });\n          } else if (typeof (params.data.asset_src) !== \"string\" && typeof (params.data.thumbnail_src) === \"string\" ) {\n            return uploadImage(resource, params)\n              .then( s3_img_url => {\n                params.data = {...params.data, asset_src: s3_img_url};\n                return dataProvider.update(resource, params);\n              });\n          }\n          return uploadImage(resource, params)\n            .then( s3_img_url => {\n              params.data = {...params.data, asset_src: s3_img_url};\n              return updatePacket(resource, params);\n            });\n\n        } else if (typeof (params.data.asset_src) === \"string\") {\n          return dataProvider.update(resource, params);\n        }\n\n        return uploadImage(resource, params)\n          .then( s3_img_url => {\n            params.data = {...params.data, asset_src: s3_img_url};\n            return dataProvider.update(resource, params);\n          });\n        default:\n          break\n    }\n  },\n\n  create: (resource, params) => {\n    if (!params.data.img_src && !params.data.asset_src && !params.data.thumbnail_src) {\n      return create(resource, params.data, params);\n    }\n\n    return uploadImage(resource, params)\n      .then (s3_img_url => {\n        switch (resource) {\n          case 'categories':\n            return create(resource, {...params.data, img_src: s3_img_url}, params);\n          case 'designs':\n            if (params.data.type === 'packet') {\n              return createPacket(resource, {...params.data, asset_src: s3_img_url}, params);\n            }\n            return create(resource, {...params.data, asset_src: s3_img_url}, params);\n          case 'products':\n            return create(resource, {...params.data, thumbnail_src: s3_img_url}, params);\n          default:\n            break;\n        }\n      });\n  },\n\n  refundTransaction: (resource, params) => {\n    return refundCreditTransaction(resource, params);\n  }\n};\n\nexport default baseDataProvider;\n","import * as React from \"react\";\nimport { Admin, Resource } from 'react-admin';\nimport authProvider from './providers/authProvider';\nimport { CategoriesList, CategoriesEdit, CategoriesCreate } from './components/categories';\nimport { DesignsList, DesignsEdit, DesignsCreate } from './components/designs';\nimport { SubcategoriesList, SubcategoriesEdit, SubcategoriesCreate } from './components/subcategories';\nimport { VolunteersList, VolunteersEdit, VolunteersCreate } from './components/volunteers';\nimport { UsersList, UsersEdit } from './components/users';\nimport { ProductsList, ProductsEdit, ProductsCreate } from './components/products';\nimport { FacilitiesList, FacilitiesEdit, FacilitiesCreate } from './components/facilities';\nimport { OrgsList, OrgsEdit, OrgsCreate } from './components/orgs';\nimport { MailShow } from './components/mail';\nimport { ContactsEdit } from './components/contacts';\nimport { OrgUsersEdit, OrgUsersCreate } from './components/orgUsers';\nimport { CreditTransactionsCreate } from './components/creditTransactions';\nimport baseDataProvider from './providers/baseDataProvider';\nimport polyglotI18nProvider from 'ra-i18n-polyglot';\nimport englishMessages from 'ra-language-english';\n\nconst i18nProvider = polyglotI18nProvider(() => englishMessages, 'en', { allowMissing: true });\n\nconst App = () => (\n    <Admin authProvider={authProvider} dataProvider={ baseDataProvider } i18nProvider={ i18nProvider }>\n      <Resource name=\"designs\" options={{ label: \"Designs\" }} list={ DesignsList } edit={ DesignsEdit } create={ DesignsCreate } />\n      <Resource name=\"categories\" options={{ label: \"Categories\" }} list={ CategoriesList } edit={ CategoriesEdit } create={ CategoriesCreate } />\n      <Resource name=\"subcategories\" options={{ label: \"Subcategories\" }} list={ SubcategoriesList } edit={ SubcategoriesEdit } create={ SubcategoriesCreate } />\n      <Resource name=\"volunteers\" options={{ label: \"Volunteers\" }} list={ VolunteersList } edit={ VolunteersEdit } create={ VolunteersCreate } />\n      <Resource name=\"products\" options={{ label: \"Products\" }} list={ ProductsList } edit={ ProductsEdit } create={ ProductsCreate } />\n      <Resource name=\"users\" options={{ label: \"Users\" }} list={ UsersList } edit={ UsersEdit } />\n      <Resource name=\"facilities\" options={{ label: \"Facilities\" }} list={ FacilitiesList } edit={ FacilitiesEdit } create={ FacilitiesCreate }/>\n      <Resource name=\"orgs\" options={{ label: \"Organizations\" }} list={ OrgsList } edit={ OrgsEdit } create={ OrgsCreate }/>\n\n      <Resource name=\"mail\" options={{ label: \"Mail\" }} show={ MailShow }/>\n      <Resource name=\"packs\" />\n      <Resource name=\"contacts\" edit={ ContactsEdit }/>\n      <Resource name=\"org-users\" edit={ OrgUsersEdit } create={ OrgUsersCreate }/>\n      <Resource name=\"credit-transactions\" create={ CreditTransactionsCreate }/>\n      <Resource name=\"stripe-transactions\" />\n    </Admin>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}